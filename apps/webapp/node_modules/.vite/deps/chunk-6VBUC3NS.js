import {
  require_assertString
} from "./chunk-MOPGICVK.js";
import {
  require_dayjs_min
} from "./chunk-2IK4BMAW.js";
import {
  __commonJS,
  __toESM
} from "./chunk-2LSFTFF7.js";

// ../../node_modules/.pnpm/validator@13.11.0/node_modules/validator/lib/isUUID.js
var require_isUUID = __commonJS({
  "../../node_modules/.pnpm/validator@13.11.0/node_modules/validator/lib/isUUID.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = isUUID2;
    var _assertString = _interopRequireDefault(require_assertString());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var uuid = {
      1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
      2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
      3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
      4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
      5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
      all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
    };
    function isUUID2(str, version) {
      (0, _assertString.default)(str);
      var pattern = uuid[![void 0, null].includes(version) ? version : "all"];
      return !!pattern && pattern.test(str);
    }
    module.exports = exports.default;
    module.exports.default = exports.default;
  }
});

// ../../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js
var require_clone = __commonJS({
  "../../node_modules/.pnpm/clone@2.1.2/node_modules/clone/clone.js"(exports, module) {
    var clone2 = function() {
      "use strict";
      function _instanceof(obj, type2) {
        return type2 != null && obj instanceof type2;
      }
      var nativeMap;
      try {
        nativeMap = Map;
      } catch (_) {
        nativeMap = function() {
        };
      }
      var nativeSet;
      try {
        nativeSet = Set;
      } catch (_) {
        nativeSet = function() {
        };
      }
      var nativePromise;
      try {
        nativePromise = Promise;
      } catch (_) {
        nativePromise = function() {
        };
      }
      function clone3(parent, circular, depth, prototype, includeNonEnumerable) {
        if (typeof circular === "object") {
          depth = circular.depth;
          prototype = circular.prototype;
          includeNonEnumerable = circular.includeNonEnumerable;
          circular = circular.circular;
        }
        var allParents = [];
        var allChildren = [];
        var useBuffer = typeof Buffer != "undefined";
        if (typeof circular == "undefined")
          circular = true;
        if (typeof depth == "undefined")
          depth = Infinity;
        function _clone2(parent2, depth2) {
          if (parent2 === null)
            return null;
          if (depth2 === 0)
            return parent2;
          var child;
          var proto;
          if (typeof parent2 != "object") {
            return parent2;
          }
          if (_instanceof(parent2, nativeMap)) {
            child = new nativeMap();
          } else if (_instanceof(parent2, nativeSet)) {
            child = new nativeSet();
          } else if (_instanceof(parent2, nativePromise)) {
            child = new nativePromise(function(resolve, reject) {
              parent2.then(function(value) {
                resolve(_clone2(value, depth2 - 1));
              }, function(err) {
                reject(_clone2(err, depth2 - 1));
              });
            });
          } else if (clone3.__isArray(parent2)) {
            child = [];
          } else if (clone3.__isRegExp(parent2)) {
            child = new RegExp(parent2.source, __getRegExpFlags(parent2));
            if (parent2.lastIndex)
              child.lastIndex = parent2.lastIndex;
          } else if (clone3.__isDate(parent2)) {
            child = new Date(parent2.getTime());
          } else if (useBuffer && Buffer.isBuffer(parent2)) {
            if (Buffer.allocUnsafe) {
              child = Buffer.allocUnsafe(parent2.length);
            } else {
              child = new Buffer(parent2.length);
            }
            parent2.copy(child);
            return child;
          } else if (_instanceof(parent2, Error)) {
            child = Object.create(parent2);
          } else {
            if (typeof prototype == "undefined") {
              proto = Object.getPrototypeOf(parent2);
              child = Object.create(proto);
            } else {
              child = Object.create(prototype);
              proto = prototype;
            }
          }
          if (circular) {
            var index = allParents.indexOf(parent2);
            if (index != -1) {
              return allChildren[index];
            }
            allParents.push(parent2);
            allChildren.push(child);
          }
          if (_instanceof(parent2, nativeMap)) {
            parent2.forEach(function(value, key) {
              var keyChild = _clone2(key, depth2 - 1);
              var valueChild = _clone2(value, depth2 - 1);
              child.set(keyChild, valueChild);
            });
          }
          if (_instanceof(parent2, nativeSet)) {
            parent2.forEach(function(value) {
              var entryChild = _clone2(value, depth2 - 1);
              child.add(entryChild);
            });
          }
          for (var i in parent2) {
            var attrs;
            if (proto) {
              attrs = Object.getOwnPropertyDescriptor(proto, i);
            }
            if (attrs && attrs.set == null) {
              continue;
            }
            child[i] = _clone2(parent2[i], depth2 - 1);
          }
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(parent2);
            for (var i = 0; i < symbols.length; i++) {
              var symbol = symbols[i];
              var descriptor = Object.getOwnPropertyDescriptor(parent2, symbol);
              if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
                continue;
              }
              child[symbol] = _clone2(parent2[symbol], depth2 - 1);
              if (!descriptor.enumerable) {
                Object.defineProperty(child, symbol, {
                  enumerable: false
                });
              }
            }
          }
          if (includeNonEnumerable) {
            var allPropertyNames = Object.getOwnPropertyNames(parent2);
            for (var i = 0; i < allPropertyNames.length; i++) {
              var propertyName = allPropertyNames[i];
              var descriptor = Object.getOwnPropertyDescriptor(parent2, propertyName);
              if (descriptor && descriptor.enumerable) {
                continue;
              }
              child[propertyName] = _clone2(parent2[propertyName], depth2 - 1);
              Object.defineProperty(child, propertyName, {
                enumerable: false
              });
            }
          }
          return child;
        }
        return _clone2(parent, depth);
      }
      clone3.clonePrototype = function clonePrototype(parent) {
        if (parent === null)
          return null;
        var c = function() {
        };
        c.prototype = parent;
        return new c();
      };
      function __objToStr(o) {
        return Object.prototype.toString.call(o);
      }
      clone3.__objToStr = __objToStr;
      function __isDate(o) {
        return typeof o === "object" && __objToStr(o) === "[object Date]";
      }
      clone3.__isDate = __isDate;
      function __isArray(o) {
        return typeof o === "object" && __objToStr(o) === "[object Array]";
      }
      clone3.__isArray = __isArray;
      function __isRegExp(o) {
        return typeof o === "object" && __objToStr(o) === "[object RegExp]";
      }
      clone3.__isRegExp = __isRegExp;
      function __getRegExpFlags(re) {
        var flags = "";
        if (re.global)
          flags += "g";
        if (re.ignoreCase)
          flags += "i";
        if (re.multiline)
          flags += "m";
        return flags;
      }
      clone3.__getRegExpFlags = __getRegExpFlags;
      return clone3;
    }();
    if (typeof module === "object" && module.exports) {
      module.exports = clone2;
    }
  }
});

// ../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/mime.json
var require_mime = __commonJS({
  "../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/mime.json"(exports, module) {
    module.exports = {
      "application/1d-interleaved-parityfec": [],
      "application/3gpp-ims+xml": [],
      "application/activemessage": [],
      "application/andrew-inset": [
        "ez"
      ],
      "application/applefile": [],
      "application/applixware": [
        "aw"
      ],
      "application/atom+xml": [
        "atom"
      ],
      "application/atomcat+xml": [
        "atomcat"
      ],
      "application/atomicmail": [],
      "application/atomsvc+xml": [
        "atomsvc"
      ],
      "application/auth-policy+xml": [],
      "application/batch-smtp": [],
      "application/beep+xml": [],
      "application/calendar+xml": [],
      "application/cals-1840": [],
      "application/ccmp+xml": [],
      "application/ccxml+xml": [
        "ccxml"
      ],
      "application/cdmi-capability": [
        "cdmia"
      ],
      "application/cdmi-container": [
        "cdmic"
      ],
      "application/cdmi-domain": [
        "cdmid"
      ],
      "application/cdmi-object": [
        "cdmio"
      ],
      "application/cdmi-queue": [
        "cdmiq"
      ],
      "application/cea-2018+xml": [],
      "application/cellml+xml": [],
      "application/cfw": [],
      "application/cnrp+xml": [],
      "application/commonground": [],
      "application/conference-info+xml": [],
      "application/cpl+xml": [],
      "application/csta+xml": [],
      "application/cstadata+xml": [],
      "application/cu-seeme": [
        "cu"
      ],
      "application/cybercash": [],
      "application/davmount+xml": [
        "davmount"
      ],
      "application/dca-rft": [],
      "application/dec-dx": [],
      "application/dialog-info+xml": [],
      "application/dicom": [],
      "application/dns": [],
      "application/docbook+xml": [
        "dbk"
      ],
      "application/dskpp+xml": [],
      "application/dssc+der": [
        "dssc"
      ],
      "application/dssc+xml": [
        "xdssc"
      ],
      "application/dvcs": [],
      "application/ecmascript": [
        "ecma"
      ],
      "application/edi-consent": [],
      "application/edi-x12": [],
      "application/edifact": [],
      "application/emma+xml": [
        "emma"
      ],
      "application/epp+xml": [],
      "application/epub+zip": [
        "epub"
      ],
      "application/eshop": [],
      "application/example": [],
      "application/exi": [
        "exi"
      ],
      "application/fastinfoset": [],
      "application/fastsoap": [],
      "application/fits": [],
      "application/font-tdpfr": [
        "pfr"
      ],
      "application/framework-attributes+xml": [],
      "application/gml+xml": [
        "gml"
      ],
      "application/gpx+xml": [
        "gpx"
      ],
      "application/gxf": [
        "gxf"
      ],
      "application/h224": [],
      "application/held+xml": [],
      "application/http": [],
      "application/hyperstudio": [
        "stk"
      ],
      "application/ibe-key-request+xml": [],
      "application/ibe-pkg-reply+xml": [],
      "application/ibe-pp-data": [],
      "application/iges": [],
      "application/im-iscomposing+xml": [],
      "application/index": [],
      "application/index.cmd": [],
      "application/index.obj": [],
      "application/index.response": [],
      "application/index.vnd": [],
      "application/inkml+xml": [
        "ink",
        "inkml"
      ],
      "application/iotp": [],
      "application/ipfix": [
        "ipfix"
      ],
      "application/ipp": [],
      "application/isup": [],
      "application/java-archive": [
        "jar"
      ],
      "application/java-serialized-object": [
        "ser"
      ],
      "application/java-vm": [
        "class"
      ],
      "application/javascript": [
        "js"
      ],
      "application/json": [
        "json"
      ],
      "application/jsonml+json": [
        "jsonml"
      ],
      "application/kpml-request+xml": [],
      "application/kpml-response+xml": [],
      "application/lost+xml": [
        "lostxml"
      ],
      "application/mac-binhex40": [
        "hqx"
      ],
      "application/mac-compactpro": [
        "cpt"
      ],
      "application/macwriteii": [],
      "application/mads+xml": [
        "mads"
      ],
      "application/marc": [
        "mrc"
      ],
      "application/marcxml+xml": [
        "mrcx"
      ],
      "application/mathematica": [
        "ma",
        "nb",
        "mb"
      ],
      "application/mathml-content+xml": [],
      "application/mathml-presentation+xml": [],
      "application/mathml+xml": [
        "mathml"
      ],
      "application/mbms-associated-procedure-description+xml": [],
      "application/mbms-deregister+xml": [],
      "application/mbms-envelope+xml": [],
      "application/mbms-msk+xml": [],
      "application/mbms-msk-response+xml": [],
      "application/mbms-protection-description+xml": [],
      "application/mbms-reception-report+xml": [],
      "application/mbms-register+xml": [],
      "application/mbms-register-response+xml": [],
      "application/mbms-user-service-description+xml": [],
      "application/mbox": [
        "mbox"
      ],
      "application/media_control+xml": [],
      "application/mediaservercontrol+xml": [
        "mscml"
      ],
      "application/metalink+xml": [
        "metalink"
      ],
      "application/metalink4+xml": [
        "meta4"
      ],
      "application/mets+xml": [
        "mets"
      ],
      "application/mikey": [],
      "application/mods+xml": [
        "mods"
      ],
      "application/moss-keys": [],
      "application/moss-signature": [],
      "application/mosskey-data": [],
      "application/mosskey-request": [],
      "application/mp21": [
        "m21",
        "mp21"
      ],
      "application/mp4": [
        "mp4s"
      ],
      "application/mpeg4-generic": [],
      "application/mpeg4-iod": [],
      "application/mpeg4-iod-xmt": [],
      "application/msc-ivr+xml": [],
      "application/msc-mixer+xml": [],
      "application/msword": [
        "doc",
        "dot"
      ],
      "application/mxf": [
        "mxf"
      ],
      "application/nasdata": [],
      "application/news-checkgroups": [],
      "application/news-groupinfo": [],
      "application/news-transmission": [],
      "application/nss": [],
      "application/ocsp-request": [],
      "application/ocsp-response": [],
      "application/octet-stream": [
        "bin",
        "dms",
        "lrf",
        "mar",
        "so",
        "dist",
        "distz",
        "pkg",
        "bpk",
        "dump",
        "elc",
        "deploy"
      ],
      "application/oda": [
        "oda"
      ],
      "application/oebps-package+xml": [
        "opf"
      ],
      "application/ogg": [
        "ogx"
      ],
      "application/omdoc+xml": [
        "omdoc"
      ],
      "application/onenote": [
        "onetoc",
        "onetoc2",
        "onetmp",
        "onepkg"
      ],
      "application/oxps": [
        "oxps"
      ],
      "application/parityfec": [],
      "application/patch-ops-error+xml": [
        "xer"
      ],
      "application/pdf": [
        "pdf"
      ],
      "application/pgp-encrypted": [
        "pgp"
      ],
      "application/pgp-keys": [],
      "application/pgp-signature": [
        "asc",
        "sig"
      ],
      "application/pics-rules": [
        "prf"
      ],
      "application/pidf+xml": [],
      "application/pidf-diff+xml": [],
      "application/pkcs10": [
        "p10"
      ],
      "application/pkcs7-mime": [
        "p7m",
        "p7c"
      ],
      "application/pkcs7-signature": [
        "p7s"
      ],
      "application/pkcs8": [
        "p8"
      ],
      "application/pkix-attr-cert": [
        "ac"
      ],
      "application/pkix-cert": [
        "cer"
      ],
      "application/pkix-crl": [
        "crl"
      ],
      "application/pkix-pkipath": [
        "pkipath"
      ],
      "application/pkixcmp": [
        "pki"
      ],
      "application/pls+xml": [
        "pls"
      ],
      "application/poc-settings+xml": [],
      "application/postscript": [
        "ai",
        "eps",
        "ps"
      ],
      "application/prs.alvestrand.titrax-sheet": [],
      "application/prs.cww": [
        "cww"
      ],
      "application/prs.nprend": [],
      "application/prs.plucker": [],
      "application/prs.rdf-xml-crypt": [],
      "application/prs.xsf+xml": [],
      "application/pskc+xml": [
        "pskcxml"
      ],
      "application/qsig": [],
      "application/rdf+xml": [
        "rdf"
      ],
      "application/reginfo+xml": [
        "rif"
      ],
      "application/relax-ng-compact-syntax": [
        "rnc"
      ],
      "application/remote-printing": [],
      "application/resource-lists+xml": [
        "rl"
      ],
      "application/resource-lists-diff+xml": [
        "rld"
      ],
      "application/riscos": [],
      "application/rlmi+xml": [],
      "application/rls-services+xml": [
        "rs"
      ],
      "application/rpki-ghostbusters": [
        "gbr"
      ],
      "application/rpki-manifest": [
        "mft"
      ],
      "application/rpki-roa": [
        "roa"
      ],
      "application/rpki-updown": [],
      "application/rsd+xml": [
        "rsd"
      ],
      "application/rss+xml": [
        "rss"
      ],
      "application/rtf": [
        "rtf"
      ],
      "application/rtx": [],
      "application/samlassertion+xml": [],
      "application/samlmetadata+xml": [],
      "application/sbml+xml": [
        "sbml"
      ],
      "application/scvp-cv-request": [
        "scq"
      ],
      "application/scvp-cv-response": [
        "scs"
      ],
      "application/scvp-vp-request": [
        "spq"
      ],
      "application/scvp-vp-response": [
        "spp"
      ],
      "application/sdp": [
        "sdp"
      ],
      "application/set-payment": [],
      "application/set-payment-initiation": [
        "setpay"
      ],
      "application/set-registration": [],
      "application/set-registration-initiation": [
        "setreg"
      ],
      "application/sgml": [],
      "application/sgml-open-catalog": [],
      "application/shf+xml": [
        "shf"
      ],
      "application/sieve": [],
      "application/simple-filter+xml": [],
      "application/simple-message-summary": [],
      "application/simplesymbolcontainer": [],
      "application/slate": [],
      "application/smil": [],
      "application/smil+xml": [
        "smi",
        "smil"
      ],
      "application/soap+fastinfoset": [],
      "application/soap+xml": [],
      "application/sparql-query": [
        "rq"
      ],
      "application/sparql-results+xml": [
        "srx"
      ],
      "application/spirits-event+xml": [],
      "application/srgs": [
        "gram"
      ],
      "application/srgs+xml": [
        "grxml"
      ],
      "application/sru+xml": [
        "sru"
      ],
      "application/ssdl+xml": [
        "ssdl"
      ],
      "application/ssml+xml": [
        "ssml"
      ],
      "application/tamp-apex-update": [],
      "application/tamp-apex-update-confirm": [],
      "application/tamp-community-update": [],
      "application/tamp-community-update-confirm": [],
      "application/tamp-error": [],
      "application/tamp-sequence-adjust": [],
      "application/tamp-sequence-adjust-confirm": [],
      "application/tamp-status-query": [],
      "application/tamp-status-response": [],
      "application/tamp-update": [],
      "application/tamp-update-confirm": [],
      "application/tei+xml": [
        "tei",
        "teicorpus"
      ],
      "application/thraud+xml": [
        "tfi"
      ],
      "application/timestamp-query": [],
      "application/timestamp-reply": [],
      "application/timestamped-data": [
        "tsd"
      ],
      "application/tve-trigger": [],
      "application/ulpfec": [],
      "application/vcard+xml": [],
      "application/vemmi": [],
      "application/vividence.scriptfile": [],
      "application/vnd.3gpp.bsf+xml": [],
      "application/vnd.3gpp.pic-bw-large": [
        "plb"
      ],
      "application/vnd.3gpp.pic-bw-small": [
        "psb"
      ],
      "application/vnd.3gpp.pic-bw-var": [
        "pvb"
      ],
      "application/vnd.3gpp.sms": [],
      "application/vnd.3gpp2.bcmcsinfo+xml": [],
      "application/vnd.3gpp2.sms": [],
      "application/vnd.3gpp2.tcap": [
        "tcap"
      ],
      "application/vnd.3m.post-it-notes": [
        "pwn"
      ],
      "application/vnd.accpac.simply.aso": [
        "aso"
      ],
      "application/vnd.accpac.simply.imp": [
        "imp"
      ],
      "application/vnd.acucobol": [
        "acu"
      ],
      "application/vnd.acucorp": [
        "atc",
        "acutc"
      ],
      "application/vnd.adobe.air-application-installer-package+zip": [
        "air"
      ],
      "application/vnd.adobe.formscentral.fcdt": [
        "fcdt"
      ],
      "application/vnd.adobe.fxp": [
        "fxp",
        "fxpl"
      ],
      "application/vnd.adobe.partial-upload": [],
      "application/vnd.adobe.xdp+xml": [
        "xdp"
      ],
      "application/vnd.adobe.xfdf": [
        "xfdf"
      ],
      "application/vnd.aether.imp": [],
      "application/vnd.ah-barcode": [],
      "application/vnd.ahead.space": [
        "ahead"
      ],
      "application/vnd.airzip.filesecure.azf": [
        "azf"
      ],
      "application/vnd.airzip.filesecure.azs": [
        "azs"
      ],
      "application/vnd.amazon.ebook": [
        "azw"
      ],
      "application/vnd.americandynamics.acc": [
        "acc"
      ],
      "application/vnd.amiga.ami": [
        "ami"
      ],
      "application/vnd.amundsen.maze+xml": [],
      "application/vnd.android.package-archive": [
        "apk"
      ],
      "application/vnd.anser-web-certificate-issue-initiation": [
        "cii"
      ],
      "application/vnd.anser-web-funds-transfer-initiation": [
        "fti"
      ],
      "application/vnd.antix.game-component": [
        "atx"
      ],
      "application/vnd.apple.installer+xml": [
        "mpkg"
      ],
      "application/vnd.apple.mpegurl": [
        "m3u8"
      ],
      "application/vnd.arastra.swi": [],
      "application/vnd.aristanetworks.swi": [
        "swi"
      ],
      "application/vnd.astraea-software.iota": [
        "iota"
      ],
      "application/vnd.audiograph": [
        "aep"
      ],
      "application/vnd.autopackage": [],
      "application/vnd.avistar+xml": [],
      "application/vnd.blueice.multipass": [
        "mpm"
      ],
      "application/vnd.bluetooth.ep.oob": [],
      "application/vnd.bmi": [
        "bmi"
      ],
      "application/vnd.businessobjects": [
        "rep"
      ],
      "application/vnd.cab-jscript": [],
      "application/vnd.canon-cpdl": [],
      "application/vnd.canon-lips": [],
      "application/vnd.cendio.thinlinc.clientconf": [],
      "application/vnd.chemdraw+xml": [
        "cdxml"
      ],
      "application/vnd.chipnuts.karaoke-mmd": [
        "mmd"
      ],
      "application/vnd.cinderella": [
        "cdy"
      ],
      "application/vnd.cirpack.isdn-ext": [],
      "application/vnd.claymore": [
        "cla"
      ],
      "application/vnd.cloanto.rp9": [
        "rp9"
      ],
      "application/vnd.clonk.c4group": [
        "c4g",
        "c4d",
        "c4f",
        "c4p",
        "c4u"
      ],
      "application/vnd.cluetrust.cartomobile-config": [
        "c11amc"
      ],
      "application/vnd.cluetrust.cartomobile-config-pkg": [
        "c11amz"
      ],
      "application/vnd.collection+json": [],
      "application/vnd.commerce-battelle": [],
      "application/vnd.commonspace": [
        "csp"
      ],
      "application/vnd.contact.cmsg": [
        "cdbcmsg"
      ],
      "application/vnd.cosmocaller": [
        "cmc"
      ],
      "application/vnd.crick.clicker": [
        "clkx"
      ],
      "application/vnd.crick.clicker.keyboard": [
        "clkk"
      ],
      "application/vnd.crick.clicker.palette": [
        "clkp"
      ],
      "application/vnd.crick.clicker.template": [
        "clkt"
      ],
      "application/vnd.crick.clicker.wordbank": [
        "clkw"
      ],
      "application/vnd.criticaltools.wbs+xml": [
        "wbs"
      ],
      "application/vnd.ctc-posml": [
        "pml"
      ],
      "application/vnd.ctct.ws+xml": [],
      "application/vnd.cups-pdf": [],
      "application/vnd.cups-postscript": [],
      "application/vnd.cups-ppd": [
        "ppd"
      ],
      "application/vnd.cups-raster": [],
      "application/vnd.cups-raw": [],
      "application/vnd.curl": [],
      "application/vnd.curl.car": [
        "car"
      ],
      "application/vnd.curl.pcurl": [
        "pcurl"
      ],
      "application/vnd.cybank": [],
      "application/vnd.dart": [
        "dart"
      ],
      "application/vnd.data-vision.rdz": [
        "rdz"
      ],
      "application/vnd.dece.data": [
        "uvf",
        "uvvf",
        "uvd",
        "uvvd"
      ],
      "application/vnd.dece.ttml+xml": [
        "uvt",
        "uvvt"
      ],
      "application/vnd.dece.unspecified": [
        "uvx",
        "uvvx"
      ],
      "application/vnd.dece.zip": [
        "uvz",
        "uvvz"
      ],
      "application/vnd.denovo.fcselayout-link": [
        "fe_launch"
      ],
      "application/vnd.dir-bi.plate-dl-nosuffix": [],
      "application/vnd.dna": [
        "dna"
      ],
      "application/vnd.dolby.mlp": [
        "mlp"
      ],
      "application/vnd.dolby.mobile.1": [],
      "application/vnd.dolby.mobile.2": [],
      "application/vnd.dpgraph": [
        "dpg"
      ],
      "application/vnd.dreamfactory": [
        "dfac"
      ],
      "application/vnd.ds-keypoint": [
        "kpxx"
      ],
      "application/vnd.dvb.ait": [
        "ait"
      ],
      "application/vnd.dvb.dvbj": [],
      "application/vnd.dvb.esgcontainer": [],
      "application/vnd.dvb.ipdcdftnotifaccess": [],
      "application/vnd.dvb.ipdcesgaccess": [],
      "application/vnd.dvb.ipdcesgaccess2": [],
      "application/vnd.dvb.ipdcesgpdd": [],
      "application/vnd.dvb.ipdcroaming": [],
      "application/vnd.dvb.iptv.alfec-base": [],
      "application/vnd.dvb.iptv.alfec-enhancement": [],
      "application/vnd.dvb.notif-aggregate-root+xml": [],
      "application/vnd.dvb.notif-container+xml": [],
      "application/vnd.dvb.notif-generic+xml": [],
      "application/vnd.dvb.notif-ia-msglist+xml": [],
      "application/vnd.dvb.notif-ia-registration-request+xml": [],
      "application/vnd.dvb.notif-ia-registration-response+xml": [],
      "application/vnd.dvb.notif-init+xml": [],
      "application/vnd.dvb.pfr": [],
      "application/vnd.dvb.service": [
        "svc"
      ],
      "application/vnd.dxr": [],
      "application/vnd.dynageo": [
        "geo"
      ],
      "application/vnd.easykaraoke.cdgdownload": [],
      "application/vnd.ecdis-update": [],
      "application/vnd.ecowin.chart": [
        "mag"
      ],
      "application/vnd.ecowin.filerequest": [],
      "application/vnd.ecowin.fileupdate": [],
      "application/vnd.ecowin.series": [],
      "application/vnd.ecowin.seriesrequest": [],
      "application/vnd.ecowin.seriesupdate": [],
      "application/vnd.emclient.accessrequest+xml": [],
      "application/vnd.enliven": [
        "nml"
      ],
      "application/vnd.eprints.data+xml": [],
      "application/vnd.epson.esf": [
        "esf"
      ],
      "application/vnd.epson.msf": [
        "msf"
      ],
      "application/vnd.epson.quickanime": [
        "qam"
      ],
      "application/vnd.epson.salt": [
        "slt"
      ],
      "application/vnd.epson.ssf": [
        "ssf"
      ],
      "application/vnd.ericsson.quickcall": [],
      "application/vnd.eszigno3+xml": [
        "es3",
        "et3"
      ],
      "application/vnd.etsi.aoc+xml": [],
      "application/vnd.etsi.cug+xml": [],
      "application/vnd.etsi.iptvcommand+xml": [],
      "application/vnd.etsi.iptvdiscovery+xml": [],
      "application/vnd.etsi.iptvprofile+xml": [],
      "application/vnd.etsi.iptvsad-bc+xml": [],
      "application/vnd.etsi.iptvsad-cod+xml": [],
      "application/vnd.etsi.iptvsad-npvr+xml": [],
      "application/vnd.etsi.iptvservice+xml": [],
      "application/vnd.etsi.iptvsync+xml": [],
      "application/vnd.etsi.iptvueprofile+xml": [],
      "application/vnd.etsi.mcid+xml": [],
      "application/vnd.etsi.overload-control-policy-dataset+xml": [],
      "application/vnd.etsi.sci+xml": [],
      "application/vnd.etsi.simservs+xml": [],
      "application/vnd.etsi.tsl+xml": [],
      "application/vnd.etsi.tsl.der": [],
      "application/vnd.eudora.data": [],
      "application/vnd.ezpix-album": [
        "ez2"
      ],
      "application/vnd.ezpix-package": [
        "ez3"
      ],
      "application/vnd.f-secure.mobile": [],
      "application/vnd.fdf": [
        "fdf"
      ],
      "application/vnd.fdsn.mseed": [
        "mseed"
      ],
      "application/vnd.fdsn.seed": [
        "seed",
        "dataless"
      ],
      "application/vnd.ffsns": [],
      "application/vnd.fints": [],
      "application/vnd.flographit": [
        "gph"
      ],
      "application/vnd.fluxtime.clip": [
        "ftc"
      ],
      "application/vnd.font-fontforge-sfd": [],
      "application/vnd.framemaker": [
        "fm",
        "frame",
        "maker",
        "book"
      ],
      "application/vnd.frogans.fnc": [
        "fnc"
      ],
      "application/vnd.frogans.ltf": [
        "ltf"
      ],
      "application/vnd.fsc.weblaunch": [
        "fsc"
      ],
      "application/vnd.fujitsu.oasys": [
        "oas"
      ],
      "application/vnd.fujitsu.oasys2": [
        "oa2"
      ],
      "application/vnd.fujitsu.oasys3": [
        "oa3"
      ],
      "application/vnd.fujitsu.oasysgp": [
        "fg5"
      ],
      "application/vnd.fujitsu.oasysprs": [
        "bh2"
      ],
      "application/vnd.fujixerox.art-ex": [],
      "application/vnd.fujixerox.art4": [],
      "application/vnd.fujixerox.hbpl": [],
      "application/vnd.fujixerox.ddd": [
        "ddd"
      ],
      "application/vnd.fujixerox.docuworks": [
        "xdw"
      ],
      "application/vnd.fujixerox.docuworks.binder": [
        "xbd"
      ],
      "application/vnd.fut-misnet": [],
      "application/vnd.fuzzysheet": [
        "fzs"
      ],
      "application/vnd.genomatix.tuxedo": [
        "txd"
      ],
      "application/vnd.geocube+xml": [],
      "application/vnd.geogebra.file": [
        "ggb"
      ],
      "application/vnd.geogebra.tool": [
        "ggt"
      ],
      "application/vnd.geometry-explorer": [
        "gex",
        "gre"
      ],
      "application/vnd.geonext": [
        "gxt"
      ],
      "application/vnd.geoplan": [
        "g2w"
      ],
      "application/vnd.geospace": [
        "g3w"
      ],
      "application/vnd.globalplatform.card-content-mgt": [],
      "application/vnd.globalplatform.card-content-mgt-response": [],
      "application/vnd.gmx": [
        "gmx"
      ],
      "application/vnd.google-earth.kml+xml": [
        "kml"
      ],
      "application/vnd.google-earth.kmz": [
        "kmz"
      ],
      "application/vnd.grafeq": [
        "gqf",
        "gqs"
      ],
      "application/vnd.gridmp": [],
      "application/vnd.groove-account": [
        "gac"
      ],
      "application/vnd.groove-help": [
        "ghf"
      ],
      "application/vnd.groove-identity-message": [
        "gim"
      ],
      "application/vnd.groove-injector": [
        "grv"
      ],
      "application/vnd.groove-tool-message": [
        "gtm"
      ],
      "application/vnd.groove-tool-template": [
        "tpl"
      ],
      "application/vnd.groove-vcard": [
        "vcg"
      ],
      "application/vnd.hal+json": [],
      "application/vnd.hal+xml": [
        "hal"
      ],
      "application/vnd.handheld-entertainment+xml": [
        "zmm"
      ],
      "application/vnd.hbci": [
        "hbci"
      ],
      "application/vnd.hcl-bireports": [],
      "application/vnd.hhe.lesson-player": [
        "les"
      ],
      "application/vnd.hp-hpgl": [
        "hpgl"
      ],
      "application/vnd.hp-hpid": [
        "hpid"
      ],
      "application/vnd.hp-hps": [
        "hps"
      ],
      "application/vnd.hp-jlyt": [
        "jlt"
      ],
      "application/vnd.hp-pcl": [
        "pcl"
      ],
      "application/vnd.hp-pclxl": [
        "pclxl"
      ],
      "application/vnd.httphone": [],
      "application/vnd.hzn-3d-crossword": [],
      "application/vnd.ibm.afplinedata": [],
      "application/vnd.ibm.electronic-media": [],
      "application/vnd.ibm.minipay": [
        "mpy"
      ],
      "application/vnd.ibm.modcap": [
        "afp",
        "listafp",
        "list3820"
      ],
      "application/vnd.ibm.rights-management": [
        "irm"
      ],
      "application/vnd.ibm.secure-container": [
        "sc"
      ],
      "application/vnd.iccprofile": [
        "icc",
        "icm"
      ],
      "application/vnd.igloader": [
        "igl"
      ],
      "application/vnd.immervision-ivp": [
        "ivp"
      ],
      "application/vnd.immervision-ivu": [
        "ivu"
      ],
      "application/vnd.informedcontrol.rms+xml": [],
      "application/vnd.informix-visionary": [],
      "application/vnd.infotech.project": [],
      "application/vnd.infotech.project+xml": [],
      "application/vnd.innopath.wamp.notification": [],
      "application/vnd.insors.igm": [
        "igm"
      ],
      "application/vnd.intercon.formnet": [
        "xpw",
        "xpx"
      ],
      "application/vnd.intergeo": [
        "i2g"
      ],
      "application/vnd.intertrust.digibox": [],
      "application/vnd.intertrust.nncp": [],
      "application/vnd.intu.qbo": [
        "qbo"
      ],
      "application/vnd.intu.qfx": [
        "qfx"
      ],
      "application/vnd.iptc.g2.conceptitem+xml": [],
      "application/vnd.iptc.g2.knowledgeitem+xml": [],
      "application/vnd.iptc.g2.newsitem+xml": [],
      "application/vnd.iptc.g2.newsmessage+xml": [],
      "application/vnd.iptc.g2.packageitem+xml": [],
      "application/vnd.iptc.g2.planningitem+xml": [],
      "application/vnd.ipunplugged.rcprofile": [
        "rcprofile"
      ],
      "application/vnd.irepository.package+xml": [
        "irp"
      ],
      "application/vnd.is-xpr": [
        "xpr"
      ],
      "application/vnd.isac.fcs": [
        "fcs"
      ],
      "application/vnd.jam": [
        "jam"
      ],
      "application/vnd.japannet-directory-service": [],
      "application/vnd.japannet-jpnstore-wakeup": [],
      "application/vnd.japannet-payment-wakeup": [],
      "application/vnd.japannet-registration": [],
      "application/vnd.japannet-registration-wakeup": [],
      "application/vnd.japannet-setstore-wakeup": [],
      "application/vnd.japannet-verification": [],
      "application/vnd.japannet-verification-wakeup": [],
      "application/vnd.jcp.javame.midlet-rms": [
        "rms"
      ],
      "application/vnd.jisp": [
        "jisp"
      ],
      "application/vnd.joost.joda-archive": [
        "joda"
      ],
      "application/vnd.kahootz": [
        "ktz",
        "ktr"
      ],
      "application/vnd.kde.karbon": [
        "karbon"
      ],
      "application/vnd.kde.kchart": [
        "chrt"
      ],
      "application/vnd.kde.kformula": [
        "kfo"
      ],
      "application/vnd.kde.kivio": [
        "flw"
      ],
      "application/vnd.kde.kontour": [
        "kon"
      ],
      "application/vnd.kde.kpresenter": [
        "kpr",
        "kpt"
      ],
      "application/vnd.kde.kspread": [
        "ksp"
      ],
      "application/vnd.kde.kword": [
        "kwd",
        "kwt"
      ],
      "application/vnd.kenameaapp": [
        "htke"
      ],
      "application/vnd.kidspiration": [
        "kia"
      ],
      "application/vnd.kinar": [
        "kne",
        "knp"
      ],
      "application/vnd.koan": [
        "skp",
        "skd",
        "skt",
        "skm"
      ],
      "application/vnd.kodak-descriptor": [
        "sse"
      ],
      "application/vnd.las.las+xml": [
        "lasxml"
      ],
      "application/vnd.liberty-request+xml": [],
      "application/vnd.llamagraphics.life-balance.desktop": [
        "lbd"
      ],
      "application/vnd.llamagraphics.life-balance.exchange+xml": [
        "lbe"
      ],
      "application/vnd.lotus-1-2-3": [
        "123"
      ],
      "application/vnd.lotus-approach": [
        "apr"
      ],
      "application/vnd.lotus-freelance": [
        "pre"
      ],
      "application/vnd.lotus-notes": [
        "nsf"
      ],
      "application/vnd.lotus-organizer": [
        "org"
      ],
      "application/vnd.lotus-screencam": [
        "scm"
      ],
      "application/vnd.lotus-wordpro": [
        "lwp"
      ],
      "application/vnd.macports.portpkg": [
        "portpkg"
      ],
      "application/vnd.marlin.drm.actiontoken+xml": [],
      "application/vnd.marlin.drm.conftoken+xml": [],
      "application/vnd.marlin.drm.license+xml": [],
      "application/vnd.marlin.drm.mdcf": [],
      "application/vnd.mcd": [
        "mcd"
      ],
      "application/vnd.medcalcdata": [
        "mc1"
      ],
      "application/vnd.mediastation.cdkey": [
        "cdkey"
      ],
      "application/vnd.meridian-slingshot": [],
      "application/vnd.mfer": [
        "mwf"
      ],
      "application/vnd.mfmp": [
        "mfm"
      ],
      "application/vnd.micrografx.flo": [
        "flo"
      ],
      "application/vnd.micrografx.igx": [
        "igx"
      ],
      "application/vnd.mif": [
        "mif"
      ],
      "application/vnd.minisoft-hp3000-save": [],
      "application/vnd.mitsubishi.misty-guard.trustweb": [],
      "application/vnd.mobius.daf": [
        "daf"
      ],
      "application/vnd.mobius.dis": [
        "dis"
      ],
      "application/vnd.mobius.mbk": [
        "mbk"
      ],
      "application/vnd.mobius.mqy": [
        "mqy"
      ],
      "application/vnd.mobius.msl": [
        "msl"
      ],
      "application/vnd.mobius.plc": [
        "plc"
      ],
      "application/vnd.mobius.txf": [
        "txf"
      ],
      "application/vnd.mophun.application": [
        "mpn"
      ],
      "application/vnd.mophun.certificate": [
        "mpc"
      ],
      "application/vnd.motorola.flexsuite": [],
      "application/vnd.motorola.flexsuite.adsi": [],
      "application/vnd.motorola.flexsuite.fis": [],
      "application/vnd.motorola.flexsuite.gotap": [],
      "application/vnd.motorola.flexsuite.kmr": [],
      "application/vnd.motorola.flexsuite.ttc": [],
      "application/vnd.motorola.flexsuite.wem": [],
      "application/vnd.motorola.iprm": [],
      "application/vnd.mozilla.xul+xml": [
        "xul"
      ],
      "application/vnd.ms-artgalry": [
        "cil"
      ],
      "application/vnd.ms-asf": [],
      "application/vnd.ms-cab-compressed": [
        "cab"
      ],
      "application/vnd.ms-color.iccprofile": [],
      "application/vnd.ms-excel": [
        "xls",
        "xlm",
        "xla",
        "xlc",
        "xlt",
        "xlw"
      ],
      "application/vnd.ms-excel.addin.macroenabled.12": [
        "xlam"
      ],
      "application/vnd.ms-excel.sheet.binary.macroenabled.12": [
        "xlsb"
      ],
      "application/vnd.ms-excel.sheet.macroenabled.12": [
        "xlsm"
      ],
      "application/vnd.ms-excel.template.macroenabled.12": [
        "xltm"
      ],
      "application/vnd.ms-fontobject": [
        "eot"
      ],
      "application/vnd.ms-htmlhelp": [
        "chm"
      ],
      "application/vnd.ms-ims": [
        "ims"
      ],
      "application/vnd.ms-lrm": [
        "lrm"
      ],
      "application/vnd.ms-office.activex+xml": [],
      "application/vnd.ms-officetheme": [
        "thmx"
      ],
      "application/vnd.ms-opentype": [],
      "application/vnd.ms-package.obfuscated-opentype": [],
      "application/vnd.ms-pki.seccat": [
        "cat"
      ],
      "application/vnd.ms-pki.stl": [
        "stl"
      ],
      "application/vnd.ms-playready.initiator+xml": [],
      "application/vnd.ms-powerpoint": [
        "ppt",
        "pps",
        "pot"
      ],
      "application/vnd.ms-powerpoint.addin.macroenabled.12": [
        "ppam"
      ],
      "application/vnd.ms-powerpoint.presentation.macroenabled.12": [
        "pptm"
      ],
      "application/vnd.ms-powerpoint.slide.macroenabled.12": [
        "sldm"
      ],
      "application/vnd.ms-powerpoint.slideshow.macroenabled.12": [
        "ppsm"
      ],
      "application/vnd.ms-powerpoint.template.macroenabled.12": [
        "potm"
      ],
      "application/vnd.ms-printing.printticket+xml": [],
      "application/vnd.ms-project": [
        "mpp",
        "mpt"
      ],
      "application/vnd.ms-tnef": [],
      "application/vnd.ms-wmdrm.lic-chlg-req": [],
      "application/vnd.ms-wmdrm.lic-resp": [],
      "application/vnd.ms-wmdrm.meter-chlg-req": [],
      "application/vnd.ms-wmdrm.meter-resp": [],
      "application/vnd.ms-word.document.macroenabled.12": [
        "docm"
      ],
      "application/vnd.ms-word.template.macroenabled.12": [
        "dotm"
      ],
      "application/vnd.ms-works": [
        "wps",
        "wks",
        "wcm",
        "wdb"
      ],
      "application/vnd.ms-wpl": [
        "wpl"
      ],
      "application/vnd.ms-xpsdocument": [
        "xps"
      ],
      "application/vnd.mseq": [
        "mseq"
      ],
      "application/vnd.msign": [],
      "application/vnd.multiad.creator": [],
      "application/vnd.multiad.creator.cif": [],
      "application/vnd.music-niff": [],
      "application/vnd.musician": [
        "mus"
      ],
      "application/vnd.muvee.style": [
        "msty"
      ],
      "application/vnd.mynfc": [
        "taglet"
      ],
      "application/vnd.ncd.control": [],
      "application/vnd.ncd.reference": [],
      "application/vnd.nervana": [],
      "application/vnd.netfpx": [],
      "application/vnd.neurolanguage.nlu": [
        "nlu"
      ],
      "application/vnd.nitf": [
        "ntf",
        "nitf"
      ],
      "application/vnd.noblenet-directory": [
        "nnd"
      ],
      "application/vnd.noblenet-sealer": [
        "nns"
      ],
      "application/vnd.noblenet-web": [
        "nnw"
      ],
      "application/vnd.nokia.catalogs": [],
      "application/vnd.nokia.conml+wbxml": [],
      "application/vnd.nokia.conml+xml": [],
      "application/vnd.nokia.isds-radio-presets": [],
      "application/vnd.nokia.iptv.config+xml": [],
      "application/vnd.nokia.landmark+wbxml": [],
      "application/vnd.nokia.landmark+xml": [],
      "application/vnd.nokia.landmarkcollection+xml": [],
      "application/vnd.nokia.n-gage.ac+xml": [],
      "application/vnd.nokia.n-gage.data": [
        "ngdat"
      ],
      "application/vnd.nokia.ncd": [],
      "application/vnd.nokia.pcd+wbxml": [],
      "application/vnd.nokia.pcd+xml": [],
      "application/vnd.nokia.radio-preset": [
        "rpst"
      ],
      "application/vnd.nokia.radio-presets": [
        "rpss"
      ],
      "application/vnd.novadigm.edm": [
        "edm"
      ],
      "application/vnd.novadigm.edx": [
        "edx"
      ],
      "application/vnd.novadigm.ext": [
        "ext"
      ],
      "application/vnd.ntt-local.file-transfer": [],
      "application/vnd.ntt-local.sip-ta_remote": [],
      "application/vnd.ntt-local.sip-ta_tcp_stream": [],
      "application/vnd.oasis.opendocument.chart": [
        "odc"
      ],
      "application/vnd.oasis.opendocument.chart-template": [
        "otc"
      ],
      "application/vnd.oasis.opendocument.database": [
        "odb"
      ],
      "application/vnd.oasis.opendocument.formula": [
        "odf"
      ],
      "application/vnd.oasis.opendocument.formula-template": [
        "odft"
      ],
      "application/vnd.oasis.opendocument.graphics": [
        "odg"
      ],
      "application/vnd.oasis.opendocument.graphics-template": [
        "otg"
      ],
      "application/vnd.oasis.opendocument.image": [
        "odi"
      ],
      "application/vnd.oasis.opendocument.image-template": [
        "oti"
      ],
      "application/vnd.oasis.opendocument.presentation": [
        "odp"
      ],
      "application/vnd.oasis.opendocument.presentation-template": [
        "otp"
      ],
      "application/vnd.oasis.opendocument.spreadsheet": [
        "ods"
      ],
      "application/vnd.oasis.opendocument.spreadsheet-template": [
        "ots"
      ],
      "application/vnd.oasis.opendocument.text": [
        "odt"
      ],
      "application/vnd.oasis.opendocument.text-master": [
        "odm"
      ],
      "application/vnd.oasis.opendocument.text-template": [
        "ott"
      ],
      "application/vnd.oasis.opendocument.text-web": [
        "oth"
      ],
      "application/vnd.obn": [],
      "application/vnd.oftn.l10n+json": [],
      "application/vnd.oipf.contentaccessdownload+xml": [],
      "application/vnd.oipf.contentaccessstreaming+xml": [],
      "application/vnd.oipf.cspg-hexbinary": [],
      "application/vnd.oipf.dae.svg+xml": [],
      "application/vnd.oipf.dae.xhtml+xml": [],
      "application/vnd.oipf.mippvcontrolmessage+xml": [],
      "application/vnd.oipf.pae.gem": [],
      "application/vnd.oipf.spdiscovery+xml": [],
      "application/vnd.oipf.spdlist+xml": [],
      "application/vnd.oipf.ueprofile+xml": [],
      "application/vnd.oipf.userprofile+xml": [],
      "application/vnd.olpc-sugar": [
        "xo"
      ],
      "application/vnd.oma-scws-config": [],
      "application/vnd.oma-scws-http-request": [],
      "application/vnd.oma-scws-http-response": [],
      "application/vnd.oma.bcast.associated-procedure-parameter+xml": [],
      "application/vnd.oma.bcast.drm-trigger+xml": [],
      "application/vnd.oma.bcast.imd+xml": [],
      "application/vnd.oma.bcast.ltkm": [],
      "application/vnd.oma.bcast.notification+xml": [],
      "application/vnd.oma.bcast.provisioningtrigger": [],
      "application/vnd.oma.bcast.sgboot": [],
      "application/vnd.oma.bcast.sgdd+xml": [],
      "application/vnd.oma.bcast.sgdu": [],
      "application/vnd.oma.bcast.simple-symbol-container": [],
      "application/vnd.oma.bcast.smartcard-trigger+xml": [],
      "application/vnd.oma.bcast.sprov+xml": [],
      "application/vnd.oma.bcast.stkm": [],
      "application/vnd.oma.cab-address-book+xml": [],
      "application/vnd.oma.cab-feature-handler+xml": [],
      "application/vnd.oma.cab-pcc+xml": [],
      "application/vnd.oma.cab-user-prefs+xml": [],
      "application/vnd.oma.dcd": [],
      "application/vnd.oma.dcdc": [],
      "application/vnd.oma.dd2+xml": [
        "dd2"
      ],
      "application/vnd.oma.drm.risd+xml": [],
      "application/vnd.oma.group-usage-list+xml": [],
      "application/vnd.oma.pal+xml": [],
      "application/vnd.oma.poc.detailed-progress-report+xml": [],
      "application/vnd.oma.poc.final-report+xml": [],
      "application/vnd.oma.poc.groups+xml": [],
      "application/vnd.oma.poc.invocation-descriptor+xml": [],
      "application/vnd.oma.poc.optimized-progress-report+xml": [],
      "application/vnd.oma.push": [],
      "application/vnd.oma.scidm.messages+xml": [],
      "application/vnd.oma.xcap-directory+xml": [],
      "application/vnd.omads-email+xml": [],
      "application/vnd.omads-file+xml": [],
      "application/vnd.omads-folder+xml": [],
      "application/vnd.omaloc-supl-init": [],
      "application/vnd.openofficeorg.extension": [
        "oxt"
      ],
      "application/vnd.openxmlformats-officedocument.custom-properties+xml": [],
      "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": [],
      "application/vnd.openxmlformats-officedocument.drawing+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": [],
      "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": [],
      "application/vnd.openxmlformats-officedocument.extended-properties+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.presentation": [
        "pptx"
      ],
      "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.slide": [
        "sldx"
      ],
      "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow": [
        "ppsx"
      ],
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.template": [
        "potx"
      ],
      "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": [],
      "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": [
        "xlsx"
      ],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template": [
        "xltx"
      ],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": [],
      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": [],
      "application/vnd.openxmlformats-officedocument.theme+xml": [],
      "application/vnd.openxmlformats-officedocument.themeoverride+xml": [],
      "application/vnd.openxmlformats-officedocument.vmldrawing": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": [
        "docx"
      ],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template": [
        "dotx"
      ],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": [],
      "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": [],
      "application/vnd.openxmlformats-package.core-properties+xml": [],
      "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": [],
      "application/vnd.openxmlformats-package.relationships+xml": [],
      "application/vnd.quobject-quoxdocument": [],
      "application/vnd.osa.netdeploy": [],
      "application/vnd.osgeo.mapguide.package": [
        "mgp"
      ],
      "application/vnd.osgi.bundle": [],
      "application/vnd.osgi.dp": [
        "dp"
      ],
      "application/vnd.osgi.subsystem": [
        "esa"
      ],
      "application/vnd.otps.ct-kip+xml": [],
      "application/vnd.palm": [
        "pdb",
        "pqa",
        "oprc"
      ],
      "application/vnd.paos.xml": [],
      "application/vnd.pawaafile": [
        "paw"
      ],
      "application/vnd.pg.format": [
        "str"
      ],
      "application/vnd.pg.osasli": [
        "ei6"
      ],
      "application/vnd.piaccess.application-licence": [],
      "application/vnd.picsel": [
        "efif"
      ],
      "application/vnd.pmi.widget": [
        "wg"
      ],
      "application/vnd.poc.group-advertisement+xml": [],
      "application/vnd.pocketlearn": [
        "plf"
      ],
      "application/vnd.powerbuilder6": [
        "pbd"
      ],
      "application/vnd.powerbuilder6-s": [],
      "application/vnd.powerbuilder7": [],
      "application/vnd.powerbuilder7-s": [],
      "application/vnd.powerbuilder75": [],
      "application/vnd.powerbuilder75-s": [],
      "application/vnd.preminet": [],
      "application/vnd.previewsystems.box": [
        "box"
      ],
      "application/vnd.proteus.magazine": [
        "mgz"
      ],
      "application/vnd.publishare-delta-tree": [
        "qps"
      ],
      "application/vnd.pvi.ptid1": [
        "ptid"
      ],
      "application/vnd.pwg-multiplexed": [],
      "application/vnd.pwg-xhtml-print+xml": [],
      "application/vnd.qualcomm.brew-app-res": [],
      "application/vnd.quark.quarkxpress": [
        "qxd",
        "qxt",
        "qwd",
        "qwt",
        "qxl",
        "qxb"
      ],
      "application/vnd.radisys.moml+xml": [],
      "application/vnd.radisys.msml+xml": [],
      "application/vnd.radisys.msml-audit+xml": [],
      "application/vnd.radisys.msml-audit-conf+xml": [],
      "application/vnd.radisys.msml-audit-conn+xml": [],
      "application/vnd.radisys.msml-audit-dialog+xml": [],
      "application/vnd.radisys.msml-audit-stream+xml": [],
      "application/vnd.radisys.msml-conf+xml": [],
      "application/vnd.radisys.msml-dialog+xml": [],
      "application/vnd.radisys.msml-dialog-base+xml": [],
      "application/vnd.radisys.msml-dialog-fax-detect+xml": [],
      "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": [],
      "application/vnd.radisys.msml-dialog-group+xml": [],
      "application/vnd.radisys.msml-dialog-speech+xml": [],
      "application/vnd.radisys.msml-dialog-transform+xml": [],
      "application/vnd.rainstor.data": [],
      "application/vnd.rapid": [],
      "application/vnd.realvnc.bed": [
        "bed"
      ],
      "application/vnd.recordare.musicxml": [
        "mxl"
      ],
      "application/vnd.recordare.musicxml+xml": [
        "musicxml"
      ],
      "application/vnd.renlearn.rlprint": [],
      "application/vnd.rig.cryptonote": [
        "cryptonote"
      ],
      "application/vnd.rim.cod": [
        "cod"
      ],
      "application/vnd.rn-realmedia": [
        "rm"
      ],
      "application/vnd.rn-realmedia-vbr": [
        "rmvb"
      ],
      "application/vnd.route66.link66+xml": [
        "link66"
      ],
      "application/vnd.rs-274x": [],
      "application/vnd.ruckus.download": [],
      "application/vnd.s3sms": [],
      "application/vnd.sailingtracker.track": [
        "st"
      ],
      "application/vnd.sbm.cid": [],
      "application/vnd.sbm.mid2": [],
      "application/vnd.scribus": [],
      "application/vnd.sealed.3df": [],
      "application/vnd.sealed.csf": [],
      "application/vnd.sealed.doc": [],
      "application/vnd.sealed.eml": [],
      "application/vnd.sealed.mht": [],
      "application/vnd.sealed.net": [],
      "application/vnd.sealed.ppt": [],
      "application/vnd.sealed.tiff": [],
      "application/vnd.sealed.xls": [],
      "application/vnd.sealedmedia.softseal.html": [],
      "application/vnd.sealedmedia.softseal.pdf": [],
      "application/vnd.seemail": [
        "see"
      ],
      "application/vnd.sema": [
        "sema"
      ],
      "application/vnd.semd": [
        "semd"
      ],
      "application/vnd.semf": [
        "semf"
      ],
      "application/vnd.shana.informed.formdata": [
        "ifm"
      ],
      "application/vnd.shana.informed.formtemplate": [
        "itp"
      ],
      "application/vnd.shana.informed.interchange": [
        "iif"
      ],
      "application/vnd.shana.informed.package": [
        "ipk"
      ],
      "application/vnd.simtech-mindmapper": [
        "twd",
        "twds"
      ],
      "application/vnd.smaf": [
        "mmf"
      ],
      "application/vnd.smart.notebook": [],
      "application/vnd.smart.teacher": [
        "teacher"
      ],
      "application/vnd.software602.filler.form+xml": [],
      "application/vnd.software602.filler.form-xml-zip": [],
      "application/vnd.solent.sdkm+xml": [
        "sdkm",
        "sdkd"
      ],
      "application/vnd.spotfire.dxp": [
        "dxp"
      ],
      "application/vnd.spotfire.sfs": [
        "sfs"
      ],
      "application/vnd.sss-cod": [],
      "application/vnd.sss-dtf": [],
      "application/vnd.sss-ntf": [],
      "application/vnd.stardivision.calc": [
        "sdc"
      ],
      "application/vnd.stardivision.draw": [
        "sda"
      ],
      "application/vnd.stardivision.impress": [
        "sdd"
      ],
      "application/vnd.stardivision.math": [
        "smf"
      ],
      "application/vnd.stardivision.writer": [
        "sdw",
        "vor"
      ],
      "application/vnd.stardivision.writer-global": [
        "sgl"
      ],
      "application/vnd.stepmania.package": [
        "smzip"
      ],
      "application/vnd.stepmania.stepchart": [
        "sm"
      ],
      "application/vnd.street-stream": [],
      "application/vnd.sun.xml.calc": [
        "sxc"
      ],
      "application/vnd.sun.xml.calc.template": [
        "stc"
      ],
      "application/vnd.sun.xml.draw": [
        "sxd"
      ],
      "application/vnd.sun.xml.draw.template": [
        "std"
      ],
      "application/vnd.sun.xml.impress": [
        "sxi"
      ],
      "application/vnd.sun.xml.impress.template": [
        "sti"
      ],
      "application/vnd.sun.xml.math": [
        "sxm"
      ],
      "application/vnd.sun.xml.writer": [
        "sxw"
      ],
      "application/vnd.sun.xml.writer.global": [
        "sxg"
      ],
      "application/vnd.sun.xml.writer.template": [
        "stw"
      ],
      "application/vnd.sun.wadl+xml": [],
      "application/vnd.sus-calendar": [
        "sus",
        "susp"
      ],
      "application/vnd.svd": [
        "svd"
      ],
      "application/vnd.swiftview-ics": [],
      "application/vnd.symbian.install": [
        "sis",
        "sisx"
      ],
      "application/vnd.syncml+xml": [
        "xsm"
      ],
      "application/vnd.syncml.dm+wbxml": [
        "bdm"
      ],
      "application/vnd.syncml.dm+xml": [
        "xdm"
      ],
      "application/vnd.syncml.dm.notification": [],
      "application/vnd.syncml.ds.notification": [],
      "application/vnd.tao.intent-module-archive": [
        "tao"
      ],
      "application/vnd.tcpdump.pcap": [
        "pcap",
        "cap",
        "dmp"
      ],
      "application/vnd.tmobile-livetv": [
        "tmo"
      ],
      "application/vnd.trid.tpt": [
        "tpt"
      ],
      "application/vnd.triscape.mxs": [
        "mxs"
      ],
      "application/vnd.trueapp": [
        "tra"
      ],
      "application/vnd.truedoc": [],
      "application/vnd.ubisoft.webplayer": [],
      "application/vnd.ufdl": [
        "ufd",
        "ufdl"
      ],
      "application/vnd.uiq.theme": [
        "utz"
      ],
      "application/vnd.umajin": [
        "umj"
      ],
      "application/vnd.unity": [
        "unityweb"
      ],
      "application/vnd.uoml+xml": [
        "uoml"
      ],
      "application/vnd.uplanet.alert": [],
      "application/vnd.uplanet.alert-wbxml": [],
      "application/vnd.uplanet.bearer-choice": [],
      "application/vnd.uplanet.bearer-choice-wbxml": [],
      "application/vnd.uplanet.cacheop": [],
      "application/vnd.uplanet.cacheop-wbxml": [],
      "application/vnd.uplanet.channel": [],
      "application/vnd.uplanet.channel-wbxml": [],
      "application/vnd.uplanet.list": [],
      "application/vnd.uplanet.list-wbxml": [],
      "application/vnd.uplanet.listcmd": [],
      "application/vnd.uplanet.listcmd-wbxml": [],
      "application/vnd.uplanet.signal": [],
      "application/vnd.vcx": [
        "vcx"
      ],
      "application/vnd.vd-study": [],
      "application/vnd.vectorworks": [],
      "application/vnd.verimatrix.vcas": [],
      "application/vnd.vidsoft.vidconference": [],
      "application/vnd.visio": [
        "vsd",
        "vst",
        "vss",
        "vsw"
      ],
      "application/vnd.visionary": [
        "vis"
      ],
      "application/vnd.vividence.scriptfile": [],
      "application/vnd.vsf": [
        "vsf"
      ],
      "application/vnd.wap.sic": [],
      "application/vnd.wap.slc": [],
      "application/vnd.wap.wbxml": [
        "wbxml"
      ],
      "application/vnd.wap.wmlc": [
        "wmlc"
      ],
      "application/vnd.wap.wmlscriptc": [
        "wmlsc"
      ],
      "application/vnd.webturbo": [
        "wtb"
      ],
      "application/vnd.wfa.wsc": [],
      "application/vnd.wmc": [],
      "application/vnd.wmf.bootstrap": [],
      "application/vnd.wolfram.mathematica": [],
      "application/vnd.wolfram.mathematica.package": [],
      "application/vnd.wolfram.player": [
        "nbp"
      ],
      "application/vnd.wordperfect": [
        "wpd"
      ],
      "application/vnd.wqd": [
        "wqd"
      ],
      "application/vnd.wrq-hp3000-labelled": [],
      "application/vnd.wt.stf": [
        "stf"
      ],
      "application/vnd.wv.csp+wbxml": [],
      "application/vnd.wv.csp+xml": [],
      "application/vnd.wv.ssp+xml": [],
      "application/vnd.xara": [
        "xar"
      ],
      "application/vnd.xfdl": [
        "xfdl"
      ],
      "application/vnd.xfdl.webform": [],
      "application/vnd.xmi+xml": [],
      "application/vnd.xmpie.cpkg": [],
      "application/vnd.xmpie.dpkg": [],
      "application/vnd.xmpie.plan": [],
      "application/vnd.xmpie.ppkg": [],
      "application/vnd.xmpie.xlim": [],
      "application/vnd.yamaha.hv-dic": [
        "hvd"
      ],
      "application/vnd.yamaha.hv-script": [
        "hvs"
      ],
      "application/vnd.yamaha.hv-voice": [
        "hvp"
      ],
      "application/vnd.yamaha.openscoreformat": [
        "osf"
      ],
      "application/vnd.yamaha.openscoreformat.osfpvg+xml": [
        "osfpvg"
      ],
      "application/vnd.yamaha.remote-setup": [],
      "application/vnd.yamaha.smaf-audio": [
        "saf"
      ],
      "application/vnd.yamaha.smaf-phrase": [
        "spf"
      ],
      "application/vnd.yamaha.through-ngn": [],
      "application/vnd.yamaha.tunnel-udpencap": [],
      "application/vnd.yellowriver-custom-menu": [
        "cmp"
      ],
      "application/vnd.zul": [
        "zir",
        "zirz"
      ],
      "application/vnd.zzazz.deck+xml": [
        "zaz"
      ],
      "application/voicexml+xml": [
        "vxml"
      ],
      "application/vq-rtcpxr": [],
      "application/watcherinfo+xml": [],
      "application/whoispp-query": [],
      "application/whoispp-response": [],
      "application/widget": [
        "wgt"
      ],
      "application/winhlp": [
        "hlp"
      ],
      "application/wita": [],
      "application/wordperfect5.1": [],
      "application/wsdl+xml": [
        "wsdl"
      ],
      "application/wspolicy+xml": [
        "wspolicy"
      ],
      "application/x-7z-compressed": [
        "7z"
      ],
      "application/x-abiword": [
        "abw"
      ],
      "application/x-ace-compressed": [
        "ace"
      ],
      "application/x-amf": [],
      "application/x-apple-diskimage": [
        "dmg"
      ],
      "application/x-authorware-bin": [
        "aab",
        "x32",
        "u32",
        "vox"
      ],
      "application/x-authorware-map": [
        "aam"
      ],
      "application/x-authorware-seg": [
        "aas"
      ],
      "application/x-bcpio": [
        "bcpio"
      ],
      "application/x-bittorrent": [
        "torrent"
      ],
      "application/x-blorb": [
        "blb",
        "blorb"
      ],
      "application/x-bzip": [
        "bz"
      ],
      "application/x-bzip2": [
        "bz2",
        "boz"
      ],
      "application/x-cbr": [
        "cbr",
        "cba",
        "cbt",
        "cbz",
        "cb7"
      ],
      "application/x-cdlink": [
        "vcd"
      ],
      "application/x-cfs-compressed": [
        "cfs"
      ],
      "application/x-chat": [
        "chat"
      ],
      "application/x-chess-pgn": [
        "pgn"
      ],
      "application/x-conference": [
        "nsc"
      ],
      "application/x-compress": [],
      "application/x-cpio": [
        "cpio"
      ],
      "application/x-csh": [
        "csh"
      ],
      "application/x-debian-package": [
        "deb",
        "udeb"
      ],
      "application/x-dgc-compressed": [
        "dgc"
      ],
      "application/x-director": [
        "dir",
        "dcr",
        "dxr",
        "cst",
        "cct",
        "cxt",
        "w3d",
        "fgd",
        "swa"
      ],
      "application/x-doom": [
        "wad"
      ],
      "application/x-dtbncx+xml": [
        "ncx"
      ],
      "application/x-dtbook+xml": [
        "dtb"
      ],
      "application/x-dtbresource+xml": [
        "res"
      ],
      "application/x-dvi": [
        "dvi"
      ],
      "application/x-envoy": [
        "evy"
      ],
      "application/x-eva": [
        "eva"
      ],
      "application/x-font-bdf": [
        "bdf"
      ],
      "application/x-font-dos": [],
      "application/x-font-framemaker": [],
      "application/x-font-ghostscript": [
        "gsf"
      ],
      "application/x-font-libgrx": [],
      "application/x-font-linux-psf": [
        "psf"
      ],
      "application/x-font-otf": [
        "otf"
      ],
      "application/x-font-pcf": [
        "pcf"
      ],
      "application/x-font-snf": [
        "snf"
      ],
      "application/x-font-speedo": [],
      "application/x-font-sunos-news": [],
      "application/x-font-ttf": [
        "ttf",
        "ttc"
      ],
      "application/x-font-type1": [
        "pfa",
        "pfb",
        "pfm",
        "afm"
      ],
      "application/font-woff": [
        "woff"
      ],
      "application/x-font-vfont": [],
      "application/x-freearc": [
        "arc"
      ],
      "application/x-futuresplash": [
        "spl"
      ],
      "application/x-gca-compressed": [
        "gca"
      ],
      "application/x-glulx": [
        "ulx"
      ],
      "application/x-gnumeric": [
        "gnumeric"
      ],
      "application/x-gramps-xml": [
        "gramps"
      ],
      "application/x-gtar": [
        "gtar"
      ],
      "application/x-gzip": [],
      "application/x-hdf": [
        "hdf"
      ],
      "application/x-install-instructions": [
        "install"
      ],
      "application/x-iso9660-image": [
        "iso"
      ],
      "application/x-java-jnlp-file": [
        "jnlp"
      ],
      "application/x-latex": [
        "latex"
      ],
      "application/x-lzh-compressed": [
        "lzh",
        "lha"
      ],
      "application/x-mie": [
        "mie"
      ],
      "application/x-mobipocket-ebook": [
        "prc",
        "mobi"
      ],
      "application/x-ms-application": [
        "application"
      ],
      "application/x-ms-shortcut": [
        "lnk"
      ],
      "application/x-ms-wmd": [
        "wmd"
      ],
      "application/x-ms-wmz": [
        "wmz"
      ],
      "application/x-ms-xbap": [
        "xbap"
      ],
      "application/x-msaccess": [
        "mdb"
      ],
      "application/x-msbinder": [
        "obd"
      ],
      "application/x-mscardfile": [
        "crd"
      ],
      "application/x-msclip": [
        "clp"
      ],
      "application/x-msdownload": [
        "exe",
        "dll",
        "com",
        "bat",
        "msi"
      ],
      "application/x-msmediaview": [
        "mvb",
        "m13",
        "m14"
      ],
      "application/x-msmetafile": [
        "wmf",
        "wmz",
        "emf",
        "emz"
      ],
      "application/x-msmoney": [
        "mny"
      ],
      "application/x-mspublisher": [
        "pub"
      ],
      "application/x-msschedule": [
        "scd"
      ],
      "application/x-msterminal": [
        "trm"
      ],
      "application/x-mswrite": [
        "wri"
      ],
      "application/x-netcdf": [
        "nc",
        "cdf"
      ],
      "application/x-nzb": [
        "nzb"
      ],
      "application/x-pkcs12": [
        "p12",
        "pfx"
      ],
      "application/x-pkcs7-certificates": [
        "p7b",
        "spc"
      ],
      "application/x-pkcs7-certreqresp": [
        "p7r"
      ],
      "application/x-rar-compressed": [
        "rar"
      ],
      "application/x-research-info-systems": [
        "ris"
      ],
      "application/x-sh": [
        "sh"
      ],
      "application/x-shar": [
        "shar"
      ],
      "application/x-shockwave-flash": [
        "swf"
      ],
      "application/x-silverlight-app": [
        "xap"
      ],
      "application/x-sql": [
        "sql"
      ],
      "application/x-stuffit": [
        "sit"
      ],
      "application/x-stuffitx": [
        "sitx"
      ],
      "application/x-subrip": [
        "srt"
      ],
      "application/x-sv4cpio": [
        "sv4cpio"
      ],
      "application/x-sv4crc": [
        "sv4crc"
      ],
      "application/x-t3vm-image": [
        "t3"
      ],
      "application/x-tads": [
        "gam"
      ],
      "application/x-tar": [
        "tar"
      ],
      "application/x-tcl": [
        "tcl"
      ],
      "application/x-tex": [
        "tex"
      ],
      "application/x-tex-tfm": [
        "tfm"
      ],
      "application/x-texinfo": [
        "texinfo",
        "texi"
      ],
      "application/x-tgif": [
        "obj"
      ],
      "application/x-ustar": [
        "ustar"
      ],
      "application/x-wais-source": [
        "src"
      ],
      "application/x-x509-ca-cert": [
        "der",
        "crt"
      ],
      "application/x-xfig": [
        "fig"
      ],
      "application/x-xliff+xml": [
        "xlf"
      ],
      "application/x-xpinstall": [
        "xpi"
      ],
      "application/x-xz": [
        "xz"
      ],
      "application/x-zmachine": [
        "z1",
        "z2",
        "z3",
        "z4",
        "z5",
        "z6",
        "z7",
        "z8"
      ],
      "application/x400-bp": [],
      "application/xaml+xml": [
        "xaml"
      ],
      "application/xcap-att+xml": [],
      "application/xcap-caps+xml": [],
      "application/xcap-diff+xml": [
        "xdf"
      ],
      "application/xcap-el+xml": [],
      "application/xcap-error+xml": [],
      "application/xcap-ns+xml": [],
      "application/xcon-conference-info-diff+xml": [],
      "application/xcon-conference-info+xml": [],
      "application/xenc+xml": [
        "xenc"
      ],
      "application/xhtml+xml": [
        "xhtml",
        "xht"
      ],
      "application/xhtml-voice+xml": [],
      "application/xml": [
        "xml",
        "xsl"
      ],
      "application/xml-dtd": [
        "dtd"
      ],
      "application/xml-external-parsed-entity": [],
      "application/xmpp+xml": [],
      "application/xop+xml": [
        "xop"
      ],
      "application/xproc+xml": [
        "xpl"
      ],
      "application/xslt+xml": [
        "xslt"
      ],
      "application/xspf+xml": [
        "xspf"
      ],
      "application/xv+xml": [
        "mxml",
        "xhvml",
        "xvml",
        "xvm"
      ],
      "application/yang": [
        "yang"
      ],
      "application/yin+xml": [
        "yin"
      ],
      "application/zip": [
        "zip"
      ],
      "audio/1d-interleaved-parityfec": [],
      "audio/32kadpcm": [],
      "audio/3gpp": [],
      "audio/3gpp2": [],
      "audio/ac3": [],
      "audio/adpcm": [
        "adp"
      ],
      "audio/amr": [],
      "audio/amr-wb": [],
      "audio/amr-wb+": [],
      "audio/asc": [],
      "audio/atrac-advanced-lossless": [],
      "audio/atrac-x": [],
      "audio/atrac3": [],
      "audio/basic": [
        "au",
        "snd"
      ],
      "audio/bv16": [],
      "audio/bv32": [],
      "audio/clearmode": [],
      "audio/cn": [],
      "audio/dat12": [],
      "audio/dls": [],
      "audio/dsr-es201108": [],
      "audio/dsr-es202050": [],
      "audio/dsr-es202211": [],
      "audio/dsr-es202212": [],
      "audio/dv": [],
      "audio/dvi4": [],
      "audio/eac3": [],
      "audio/evrc": [],
      "audio/evrc-qcp": [],
      "audio/evrc0": [],
      "audio/evrc1": [],
      "audio/evrcb": [],
      "audio/evrcb0": [],
      "audio/evrcb1": [],
      "audio/evrcwb": [],
      "audio/evrcwb0": [],
      "audio/evrcwb1": [],
      "audio/example": [],
      "audio/fwdred": [],
      "audio/g719": [],
      "audio/g722": [],
      "audio/g7221": [],
      "audio/g723": [],
      "audio/g726-16": [],
      "audio/g726-24": [],
      "audio/g726-32": [],
      "audio/g726-40": [],
      "audio/g728": [],
      "audio/g729": [],
      "audio/g7291": [],
      "audio/g729d": [],
      "audio/g729e": [],
      "audio/gsm": [],
      "audio/gsm-efr": [],
      "audio/gsm-hr-08": [],
      "audio/ilbc": [],
      "audio/ip-mr_v2.5": [],
      "audio/isac": [],
      "audio/l16": [],
      "audio/l20": [],
      "audio/l24": [],
      "audio/l8": [],
      "audio/lpc": [],
      "audio/midi": [
        "mid",
        "midi",
        "kar",
        "rmi"
      ],
      "audio/mobile-xmf": [],
      "audio/mp4": [
        "mp4a"
      ],
      "audio/mp4a-latm": [],
      "audio/mpa": [],
      "audio/mpa-robust": [],
      "audio/mpeg": [
        "mpga",
        "mp2",
        "mp2a",
        "mp3",
        "m2a",
        "m3a"
      ],
      "audio/mpeg4-generic": [],
      "audio/musepack": [],
      "audio/ogg": [
        "oga",
        "ogg",
        "spx"
      ],
      "audio/opus": [],
      "audio/parityfec": [],
      "audio/pcma": [],
      "audio/pcma-wb": [],
      "audio/pcmu-wb": [],
      "audio/pcmu": [],
      "audio/prs.sid": [],
      "audio/qcelp": [],
      "audio/red": [],
      "audio/rtp-enc-aescm128": [],
      "audio/rtp-midi": [],
      "audio/rtx": [],
      "audio/s3m": [
        "s3m"
      ],
      "audio/silk": [
        "sil"
      ],
      "audio/smv": [],
      "audio/smv0": [],
      "audio/smv-qcp": [],
      "audio/sp-midi": [],
      "audio/speex": [],
      "audio/t140c": [],
      "audio/t38": [],
      "audio/telephone-event": [],
      "audio/tone": [],
      "audio/uemclip": [],
      "audio/ulpfec": [],
      "audio/vdvi": [],
      "audio/vmr-wb": [],
      "audio/vnd.3gpp.iufp": [],
      "audio/vnd.4sb": [],
      "audio/vnd.audiokoz": [],
      "audio/vnd.celp": [],
      "audio/vnd.cisco.nse": [],
      "audio/vnd.cmles.radio-events": [],
      "audio/vnd.cns.anp1": [],
      "audio/vnd.cns.inf1": [],
      "audio/vnd.dece.audio": [
        "uva",
        "uvva"
      ],
      "audio/vnd.digital-winds": [
        "eol"
      ],
      "audio/vnd.dlna.adts": [],
      "audio/vnd.dolby.heaac.1": [],
      "audio/vnd.dolby.heaac.2": [],
      "audio/vnd.dolby.mlp": [],
      "audio/vnd.dolby.mps": [],
      "audio/vnd.dolby.pl2": [],
      "audio/vnd.dolby.pl2x": [],
      "audio/vnd.dolby.pl2z": [],
      "audio/vnd.dolby.pulse.1": [],
      "audio/vnd.dra": [
        "dra"
      ],
      "audio/vnd.dts": [
        "dts"
      ],
      "audio/vnd.dts.hd": [
        "dtshd"
      ],
      "audio/vnd.dvb.file": [],
      "audio/vnd.everad.plj": [],
      "audio/vnd.hns.audio": [],
      "audio/vnd.lucent.voice": [
        "lvp"
      ],
      "audio/vnd.ms-playready.media.pya": [
        "pya"
      ],
      "audio/vnd.nokia.mobile-xmf": [],
      "audio/vnd.nortel.vbk": [],
      "audio/vnd.nuera.ecelp4800": [
        "ecelp4800"
      ],
      "audio/vnd.nuera.ecelp7470": [
        "ecelp7470"
      ],
      "audio/vnd.nuera.ecelp9600": [
        "ecelp9600"
      ],
      "audio/vnd.octel.sbc": [],
      "audio/vnd.qcelp": [],
      "audio/vnd.rhetorex.32kadpcm": [],
      "audio/vnd.rip": [
        "rip"
      ],
      "audio/vnd.sealedmedia.softseal.mpeg": [],
      "audio/vnd.vmx.cvsd": [],
      "audio/vorbis": [],
      "audio/vorbis-config": [],
      "audio/webm": [
        "weba"
      ],
      "audio/x-aac": [
        "aac"
      ],
      "audio/x-aiff": [
        "aif",
        "aiff",
        "aifc"
      ],
      "audio/x-caf": [
        "caf"
      ],
      "audio/x-flac": [
        "flac"
      ],
      "audio/x-matroska": [
        "mka"
      ],
      "audio/x-mpegurl": [
        "m3u"
      ],
      "audio/x-ms-wax": [
        "wax"
      ],
      "audio/x-ms-wma": [
        "wma"
      ],
      "audio/x-pn-realaudio": [
        "ram",
        "ra"
      ],
      "audio/x-pn-realaudio-plugin": [
        "rmp"
      ],
      "audio/x-tta": [],
      "audio/x-wav": [
        "wav"
      ],
      "audio/xm": [
        "xm"
      ],
      "chemical/x-cdx": [
        "cdx"
      ],
      "chemical/x-cif": [
        "cif"
      ],
      "chemical/x-cmdf": [
        "cmdf"
      ],
      "chemical/x-cml": [
        "cml"
      ],
      "chemical/x-csml": [
        "csml"
      ],
      "chemical/x-pdb": [],
      "chemical/x-xyz": [
        "xyz"
      ],
      "image/bmp": [
        "bmp"
      ],
      "image/cgm": [
        "cgm"
      ],
      "image/example": [],
      "image/fits": [],
      "image/g3fax": [
        "g3"
      ],
      "image/gif": [
        "gif"
      ],
      "image/ief": [
        "ief"
      ],
      "image/jp2": [],
      "image/jpeg": [
        "jpeg",
        "jpg",
        "jpe"
      ],
      "image/jpm": [],
      "image/jpx": [],
      "image/ktx": [
        "ktx"
      ],
      "image/naplps": [],
      "image/png": [
        "png"
      ],
      "image/prs.btif": [
        "btif"
      ],
      "image/prs.pti": [],
      "image/sgi": [
        "sgi"
      ],
      "image/svg+xml": [
        "svg",
        "svgz"
      ],
      "image/t38": [],
      "image/tiff": [
        "tiff",
        "tif"
      ],
      "image/tiff-fx": [],
      "image/vnd.adobe.photoshop": [
        "psd"
      ],
      "image/vnd.cns.inf2": [],
      "image/vnd.dece.graphic": [
        "uvi",
        "uvvi",
        "uvg",
        "uvvg"
      ],
      "image/vnd.dvb.subtitle": [
        "sub"
      ],
      "image/vnd.djvu": [
        "djvu",
        "djv"
      ],
      "image/vnd.dwg": [
        "dwg"
      ],
      "image/vnd.dxf": [
        "dxf"
      ],
      "image/vnd.fastbidsheet": [
        "fbs"
      ],
      "image/vnd.fpx": [
        "fpx"
      ],
      "image/vnd.fst": [
        "fst"
      ],
      "image/vnd.fujixerox.edmics-mmr": [
        "mmr"
      ],
      "image/vnd.fujixerox.edmics-rlc": [
        "rlc"
      ],
      "image/vnd.globalgraphics.pgb": [],
      "image/vnd.microsoft.icon": [],
      "image/vnd.mix": [],
      "image/vnd.ms-modi": [
        "mdi"
      ],
      "image/vnd.ms-photo": [
        "wdp"
      ],
      "image/vnd.net-fpx": [
        "npx"
      ],
      "image/vnd.radiance": [],
      "image/vnd.sealed.png": [],
      "image/vnd.sealedmedia.softseal.gif": [],
      "image/vnd.sealedmedia.softseal.jpg": [],
      "image/vnd.svf": [],
      "image/vnd.wap.wbmp": [
        "wbmp"
      ],
      "image/vnd.xiff": [
        "xif"
      ],
      "image/webp": [
        "webp"
      ],
      "image/x-3ds": [
        "3ds"
      ],
      "image/x-cmu-raster": [
        "ras"
      ],
      "image/x-cmx": [
        "cmx"
      ],
      "image/x-freehand": [
        "fh",
        "fhc",
        "fh4",
        "fh5",
        "fh7"
      ],
      "image/x-icon": [
        "ico"
      ],
      "image/x-mrsid-image": [
        "sid"
      ],
      "image/x-pcx": [
        "pcx"
      ],
      "image/x-pict": [
        "pic",
        "pct"
      ],
      "image/x-portable-anymap": [
        "pnm"
      ],
      "image/x-portable-bitmap": [
        "pbm"
      ],
      "image/x-portable-graymap": [
        "pgm"
      ],
      "image/x-portable-pixmap": [
        "ppm"
      ],
      "image/x-rgb": [
        "rgb"
      ],
      "image/x-tga": [
        "tga"
      ],
      "image/x-xbitmap": [
        "xbm"
      ],
      "image/x-xpixmap": [
        "xpm"
      ],
      "image/x-xwindowdump": [
        "xwd"
      ],
      "message/cpim": [],
      "message/delivery-status": [],
      "message/disposition-notification": [],
      "message/example": [],
      "message/external-body": [],
      "message/feedback-report": [],
      "message/global": [],
      "message/global-delivery-status": [],
      "message/global-disposition-notification": [],
      "message/global-headers": [],
      "message/http": [],
      "message/imdn+xml": [],
      "message/news": [],
      "message/partial": [],
      "message/rfc822": [
        "eml",
        "mime"
      ],
      "message/s-http": [],
      "message/sip": [],
      "message/sipfrag": [],
      "message/tracking-status": [],
      "message/vnd.si.simp": [],
      "model/example": [],
      "model/iges": [
        "igs",
        "iges"
      ],
      "model/mesh": [
        "msh",
        "mesh",
        "silo"
      ],
      "model/vnd.collada+xml": [
        "dae"
      ],
      "model/vnd.dwf": [
        "dwf"
      ],
      "model/vnd.flatland.3dml": [],
      "model/vnd.gdl": [
        "gdl"
      ],
      "model/vnd.gs-gdl": [],
      "model/vnd.gs.gdl": [],
      "model/vnd.gtw": [
        "gtw"
      ],
      "model/vnd.moml+xml": [],
      "model/vnd.mts": [
        "mts"
      ],
      "model/vnd.parasolid.transmit.binary": [],
      "model/vnd.parasolid.transmit.text": [],
      "model/vnd.vtu": [
        "vtu"
      ],
      "model/vrml": [
        "wrl",
        "vrml"
      ],
      "model/x3d+binary": [
        "x3db",
        "x3dbz"
      ],
      "model/x3d+vrml": [
        "x3dv",
        "x3dvz"
      ],
      "model/x3d+xml": [
        "x3d",
        "x3dz"
      ],
      "multipart/alternative": [],
      "multipart/appledouble": [],
      "multipart/byteranges": [],
      "multipart/digest": [],
      "multipart/encrypted": [],
      "multipart/example": [],
      "multipart/form-data": [],
      "multipart/header-set": [],
      "multipart/mixed": [],
      "multipart/parallel": [],
      "multipart/related": [],
      "multipart/report": [],
      "multipart/signed": [],
      "multipart/voice-message": [],
      "text/1d-interleaved-parityfec": [],
      "text/cache-manifest": [
        "appcache"
      ],
      "text/calendar": [
        "ics",
        "ifb"
      ],
      "text/css": [
        "css"
      ],
      "text/csv": [
        "csv"
      ],
      "text/directory": [],
      "text/dns": [],
      "text/ecmascript": [],
      "text/enriched": [],
      "text/example": [],
      "text/fwdred": [],
      "text/html": [
        "html",
        "htm"
      ],
      "text/javascript": [],
      "text/n3": [
        "n3"
      ],
      "text/parityfec": [],
      "text/plain": [
        "txt",
        "text",
        "conf",
        "def",
        "list",
        "log",
        "in"
      ],
      "text/prs.fallenstein.rst": [],
      "text/prs.lines.tag": [
        "dsc"
      ],
      "text/vnd.radisys.msml-basic-layout": [],
      "text/red": [],
      "text/rfc822-headers": [],
      "text/richtext": [
        "rtx"
      ],
      "text/rtf": [],
      "text/rtp-enc-aescm128": [],
      "text/rtx": [],
      "text/sgml": [
        "sgml",
        "sgm"
      ],
      "text/t140": [],
      "text/tab-separated-values": [
        "tsv"
      ],
      "text/troff": [
        "t",
        "tr",
        "roff",
        "man",
        "me",
        "ms"
      ],
      "text/turtle": [
        "ttl"
      ],
      "text/ulpfec": [],
      "text/uri-list": [
        "uri",
        "uris",
        "urls"
      ],
      "text/vcard": [
        "vcard"
      ],
      "text/vnd.abc": [],
      "text/vnd.curl": [
        "curl"
      ],
      "text/vnd.curl.dcurl": [
        "dcurl"
      ],
      "text/vnd.curl.scurl": [
        "scurl"
      ],
      "text/vnd.curl.mcurl": [
        "mcurl"
      ],
      "text/vnd.dmclientscript": [],
      "text/vnd.dvb.subtitle": [
        "sub"
      ],
      "text/vnd.esmertec.theme-descriptor": [],
      "text/vnd.fly": [
        "fly"
      ],
      "text/vnd.fmi.flexstor": [
        "flx"
      ],
      "text/vnd.graphviz": [
        "gv"
      ],
      "text/vnd.in3d.3dml": [
        "3dml"
      ],
      "text/vnd.in3d.spot": [
        "spot"
      ],
      "text/vnd.iptc.newsml": [],
      "text/vnd.iptc.nitf": [],
      "text/vnd.latex-z": [],
      "text/vnd.motorola.reflex": [],
      "text/vnd.ms-mediapackage": [],
      "text/vnd.net2phone.commcenter.command": [],
      "text/vnd.si.uricatalogue": [],
      "text/vnd.sun.j2me.app-descriptor": [
        "jad"
      ],
      "text/vnd.trolltech.linguist": [],
      "text/vnd.wap.si": [],
      "text/vnd.wap.sl": [],
      "text/vnd.wap.wml": [
        "wml"
      ],
      "text/vnd.wap.wmlscript": [
        "wmls"
      ],
      "text/x-asm": [
        "s",
        "asm"
      ],
      "text/x-c": [
        "c",
        "cc",
        "cxx",
        "cpp",
        "h",
        "hh",
        "dic"
      ],
      "text/x-fortran": [
        "f",
        "for",
        "f77",
        "f90"
      ],
      "text/x-java-source": [
        "java"
      ],
      "text/x-opml": [
        "opml"
      ],
      "text/x-pascal": [
        "p",
        "pas"
      ],
      "text/x-nfo": [
        "nfo"
      ],
      "text/x-setext": [
        "etx"
      ],
      "text/x-sfv": [
        "sfv"
      ],
      "text/x-uuencode": [
        "uu"
      ],
      "text/x-vcalendar": [
        "vcs"
      ],
      "text/x-vcard": [
        "vcf"
      ],
      "text/xml": [],
      "text/xml-external-parsed-entity": [],
      "video/1d-interleaved-parityfec": [],
      "video/3gpp": [
        "3gp"
      ],
      "video/3gpp-tt": [],
      "video/3gpp2": [
        "3g2"
      ],
      "video/bmpeg": [],
      "video/bt656": [],
      "video/celb": [],
      "video/dv": [],
      "video/example": [],
      "video/h261": [
        "h261"
      ],
      "video/h263": [
        "h263"
      ],
      "video/h263-1998": [],
      "video/h263-2000": [],
      "video/h264": [
        "h264"
      ],
      "video/h264-rcdo": [],
      "video/h264-svc": [],
      "video/jpeg": [
        "jpgv"
      ],
      "video/jpeg2000": [],
      "video/jpm": [
        "jpm",
        "jpgm"
      ],
      "video/mj2": [
        "mj2",
        "mjp2"
      ],
      "video/mp1s": [],
      "video/mp2p": [],
      "video/mp2t": [],
      "video/mp4": [
        "mp4",
        "mp4v",
        "mpg4"
      ],
      "video/mp4v-es": [],
      "video/mpeg": [
        "mpeg",
        "mpg",
        "mpe",
        "m1v",
        "m2v"
      ],
      "video/mpeg4-generic": [],
      "video/mpv": [],
      "video/nv": [],
      "video/ogg": [
        "ogv"
      ],
      "video/parityfec": [],
      "video/pointer": [],
      "video/quicktime": [
        "qt",
        "mov"
      ],
      "video/raw": [],
      "video/rtp-enc-aescm128": [],
      "video/rtx": [],
      "video/smpte292m": [],
      "video/ulpfec": [],
      "video/vc1": [],
      "video/vnd.cctv": [],
      "video/vnd.dece.hd": [
        "uvh",
        "uvvh"
      ],
      "video/vnd.dece.mobile": [
        "uvm",
        "uvvm"
      ],
      "video/vnd.dece.mp4": [],
      "video/vnd.dece.pd": [
        "uvp",
        "uvvp"
      ],
      "video/vnd.dece.sd": [
        "uvs",
        "uvvs"
      ],
      "video/vnd.dece.video": [
        "uvv",
        "uvvv"
      ],
      "video/vnd.directv.mpeg": [],
      "video/vnd.directv.mpeg-tts": [],
      "video/vnd.dlna.mpeg-tts": [],
      "video/vnd.dvb.file": [
        "dvb"
      ],
      "video/vnd.fvt": [
        "fvt"
      ],
      "video/vnd.hns.video": [],
      "video/vnd.iptvforum.1dparityfec-1010": [],
      "video/vnd.iptvforum.1dparityfec-2005": [],
      "video/vnd.iptvforum.2dparityfec-1010": [],
      "video/vnd.iptvforum.2dparityfec-2005": [],
      "video/vnd.iptvforum.ttsavc": [],
      "video/vnd.iptvforum.ttsmpeg2": [],
      "video/vnd.motorola.video": [],
      "video/vnd.motorola.videop": [],
      "video/vnd.mpegurl": [
        "mxu",
        "m4u"
      ],
      "video/vnd.ms-playready.media.pyv": [
        "pyv"
      ],
      "video/vnd.nokia.interleaved-multimedia": [],
      "video/vnd.nokia.videovoip": [],
      "video/vnd.objectvideo": [],
      "video/vnd.sealed.mpeg1": [],
      "video/vnd.sealed.mpeg4": [],
      "video/vnd.sealed.swf": [],
      "video/vnd.sealedmedia.softseal.mov": [],
      "video/vnd.uvvu.mp4": [
        "uvu",
        "uvvu"
      ],
      "video/vnd.vivo": [
        "viv"
      ],
      "video/webm": [
        "webm"
      ],
      "video/x-f4v": [
        "f4v"
      ],
      "video/x-fli": [
        "fli"
      ],
      "video/x-flv": [
        "flv"
      ],
      "video/x-m4v": [
        "m4v"
      ],
      "video/x-matroska": [
        "mkv",
        "mk3d",
        "mks"
      ],
      "video/x-mng": [
        "mng"
      ],
      "video/x-ms-asf": [
        "asf",
        "asx"
      ],
      "video/x-ms-vob": [
        "vob"
      ],
      "video/x-ms-wm": [
        "wm"
      ],
      "video/x-ms-wmv": [
        "wmv"
      ],
      "video/x-ms-wmx": [
        "wmx"
      ],
      "video/x-ms-wvx": [
        "wvx"
      ],
      "video/x-msvideo": [
        "avi"
      ],
      "video/x-sgi-movie": [
        "movie"
      ],
      "video/x-smv": [
        "smv"
      ],
      "x-conference/x-cooltalk": [
        "ice"
      ]
    };
  }
});

// ../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/node.json
var require_node = __commonJS({
  "../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/node.json"(exports, module) {
    module.exports = {
      "text/vtt": [
        "vtt"
      ],
      "application/x-chrome-extension": [
        "crx"
      ],
      "text/x-component": [
        "htc"
      ],
      "text/cache-manifest": [
        "manifest"
      ],
      "application/octet-stream": [
        "buffer"
      ],
      "application/mp4": [
        "m4p"
      ],
      "audio/mp4": [
        "m4a"
      ],
      "video/MP2T": [
        "ts"
      ],
      "application/x-web-app-manifest+json": [
        "webapp"
      ],
      "text/x-lua": [
        "lua"
      ],
      "application/x-lua-bytecode": [
        "luac"
      ],
      "text/x-markdown": [
        "markdown",
        "md",
        "mkd"
      ],
      "text/plain": [
        "ini"
      ],
      "application/dash+xml": [
        "mdp"
      ],
      "font/opentype": [
        "otf"
      ],
      "application/json": [
        "map"
      ],
      "application/xml": [
        "xsd"
      ]
    };
  }
});

// ../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/custom.json
var require_custom = __commonJS({
  "../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/custom.json"(exports, module) {
    module.exports = {
      "text/jade": [
        "jade"
      ],
      "text/stylus": [
        "stylus",
        "styl"
      ],
      "text/less": [
        "less"
      ],
      "text/x-sass": [
        "sass"
      ],
      "text/x-scss": [
        "scss"
      ],
      "text/coffeescript": [
        "coffee"
      ],
      "text/x-handlebars-template": [
        "hbs"
      ],
      "text/jsx": [
        "jsx"
      ]
    };
  }
});

// ../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/index.js
var require_lib = __commonJS({
  "../../node_modules/.pnpm/mime-types@1.0.2/node_modules/mime-types/lib/index.js"(exports) {
    exports.types = /* @__PURE__ */ Object.create(null);
    exports.extensions = /* @__PURE__ */ Object.create(null);
    exports.define = define2;
    exports.json = {
      mime: require_mime(),
      node: require_node(),
      custom: require_custom()
    };
    exports.lookup = function(string) {
      if (!string || typeof string !== "string")
        return false;
      string = string.replace(/.*[\.\/\\]/, "").toLowerCase();
      if (!string)
        return false;
      return exports.types[string] || false;
    };
    exports.extension = function(type2) {
      if (!type2 || typeof type2 !== "string")
        return false;
      type2 = type2.match(/^\s*([^;\s]*)(?:;|\s|$)/);
      if (!type2)
        return false;
      var exts = exports.extensions[type2[1].toLowerCase()];
      if (!exts || !exts.length)
        return false;
      return exts[0];
    };
    exports.charset = function(type2) {
      switch (type2) {
        case "application/json":
          return "UTF-8";
        case "application/javascript":
          return "UTF-8";
      }
      if (/^text\//.test(type2))
        return "UTF-8";
      return false;
    };
    exports.charsets = {
      lookup: exports.charset
    };
    exports.contentType = function(type2) {
      if (!type2 || typeof type2 !== "string")
        return false;
      if (!~type2.indexOf("/"))
        type2 = exports.lookup(type2);
      if (!type2)
        return false;
      if (!~type2.indexOf("charset")) {
        var charset = exports.charset(type2);
        if (charset)
          type2 += "; charset=" + charset.toLowerCase();
      }
      return type2;
    };
    define2(exports.json.mime);
    define2(exports.json.node);
    define2(exports.json.custom);
    function define2(json) {
      Object.keys(json).forEach(function(type2) {
        var exts = json[type2] || [];
        exports.extensions[type2] = exports.extensions[type2] || [];
        exts.forEach(function(ext) {
          if (!~exports.extensions[type2].indexOf(ext))
            exports.extensions[type2].push(ext);
          exports.types[ext] = type2;
        });
      });
    }
  }
});

// ../../node_modules/.pnpm/object-path@0.11.8/node_modules/object-path/index.js
var require_object_path = __commonJS({
  "../../node_modules/.pnpm/object-path@0.11.8/node_modules/object-path/index.js"(exports, module) {
    (function(root, factory) {
      "use strict";
      if (typeof module === "object" && typeof module.exports === "object") {
        module.exports = factory();
      } else if (typeof define === "function" && define.amd) {
        define([], factory);
      } else {
        root.objectPath = factory();
      }
    })(exports, function() {
      "use strict";
      var toStr = Object.prototype.toString;
      function hasOwnProperty2(obj, prop) {
        if (obj == null) {
          return false;
        }
        return Object.prototype.hasOwnProperty.call(obj, prop);
      }
      function isEmpty3(value) {
        if (!value) {
          return true;
        }
        if (isArray2(value) && value.length === 0) {
          return true;
        } else if (typeof value !== "string") {
          for (var i in value) {
            if (hasOwnProperty2(value, i)) {
              return false;
            }
          }
          return true;
        }
        return false;
      }
      function toString2(type2) {
        return toStr.call(type2);
      }
      function isObject3(obj) {
        return typeof obj === "object" && toString2(obj) === "[object Object]";
      }
      var isArray2 = Array.isArray || function(obj) {
        return toStr.call(obj) === "[object Array]";
      };
      function isBoolean2(obj) {
        return typeof obj === "boolean" || toString2(obj) === "[object Boolean]";
      }
      function getKey(key) {
        var intKey = parseInt(key);
        if (intKey.toString() === key) {
          return intKey;
        }
        return key;
      }
      function factory(options) {
        options = options || {};
        var objectPath2 = function(obj) {
          return Object.keys(objectPath2).reduce(function(proxy, prop) {
            if (prop === "create") {
              return proxy;
            }
            if (typeof objectPath2[prop] === "function") {
              proxy[prop] = objectPath2[prop].bind(objectPath2, obj);
            }
            return proxy;
          }, {});
        };
        var hasShallowProperty;
        if (options.includeInheritedProps) {
          hasShallowProperty = function() {
            return true;
          };
        } else {
          hasShallowProperty = function(obj, prop) {
            return typeof prop === "number" && Array.isArray(obj) || hasOwnProperty2(obj, prop);
          };
        }
        function getShallowProperty(obj, prop) {
          if (hasShallowProperty(obj, prop)) {
            return obj[prop];
          }
        }
        var getShallowPropertySafely;
        if (options.includeInheritedProps) {
          getShallowPropertySafely = function(obj, currentPath) {
            if (typeof currentPath !== "string" && typeof currentPath !== "number") {
              currentPath = String(currentPath);
            }
            var currentValue = getShallowProperty(obj, currentPath);
            if (currentPath === "__proto__" || currentPath === "prototype" || currentPath === "constructor" && typeof currentValue === "function") {
              throw new Error("For security reasons, object's magic properties cannot be set");
            }
            return currentValue;
          };
        } else {
          getShallowPropertySafely = function(obj, currentPath) {
            return getShallowProperty(obj, currentPath);
          };
        }
        function set2(obj, path, value, doNotReplace) {
          if (typeof path === "number") {
            path = [path];
          }
          if (!path || path.length === 0) {
            return obj;
          }
          if (typeof path === "string") {
            return set2(obj, path.split(".").map(getKey), value, doNotReplace);
          }
          var currentPath = path[0];
          var currentValue = getShallowPropertySafely(obj, currentPath);
          if (path.length === 1) {
            if (currentValue === void 0 || !doNotReplace) {
              obj[currentPath] = value;
            }
            return currentValue;
          }
          if (currentValue === void 0) {
            if (typeof path[1] === "number") {
              obj[currentPath] = [];
            } else {
              obj[currentPath] = {};
            }
          }
          return set2(obj[currentPath], path.slice(1), value, doNotReplace);
        }
        objectPath2.has = function(obj, path) {
          if (typeof path === "number") {
            path = [path];
          } else if (typeof path === "string") {
            path = path.split(".");
          }
          if (!path || path.length === 0) {
            return !!obj;
          }
          for (var i = 0; i < path.length; i++) {
            var j = getKey(path[i]);
            if (typeof j === "number" && isArray2(obj) && j < obj.length || (options.includeInheritedProps ? j in Object(obj) : hasOwnProperty2(obj, j))) {
              obj = obj[j];
            } else {
              return false;
            }
          }
          return true;
        };
        objectPath2.ensureExists = function(obj, path, value) {
          return set2(obj, path, value, true);
        };
        objectPath2.set = function(obj, path, value, doNotReplace) {
          return set2(obj, path, value, doNotReplace);
        };
        objectPath2.insert = function(obj, path, value, at) {
          var arr = objectPath2.get(obj, path);
          at = ~~at;
          if (!isArray2(arr)) {
            arr = [];
            objectPath2.set(obj, path, arr);
          }
          arr.splice(at, 0, value);
        };
        objectPath2.empty = function(obj, path) {
          if (isEmpty3(path)) {
            return void 0;
          }
          if (obj == null) {
            return void 0;
          }
          var value, i;
          if (!(value = objectPath2.get(obj, path))) {
            return void 0;
          }
          if (typeof value === "string") {
            return objectPath2.set(obj, path, "");
          } else if (isBoolean2(value)) {
            return objectPath2.set(obj, path, false);
          } else if (typeof value === "number") {
            return objectPath2.set(obj, path, 0);
          } else if (isArray2(value)) {
            value.length = 0;
          } else if (isObject3(value)) {
            for (i in value) {
              if (hasShallowProperty(value, i)) {
                delete value[i];
              }
            }
          } else {
            return objectPath2.set(obj, path, null);
          }
        };
        objectPath2.push = function(obj, path) {
          var arr = objectPath2.get(obj, path);
          if (!isArray2(arr)) {
            arr = [];
            objectPath2.set(obj, path, arr);
          }
          arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
        };
        objectPath2.coalesce = function(obj, paths, defaultValue) {
          var value;
          for (var i = 0, len = paths.length; i < len; i++) {
            if ((value = objectPath2.get(obj, paths[i])) !== void 0) {
              return value;
            }
          }
          return defaultValue;
        };
        objectPath2.get = function(obj, path, defaultValue) {
          if (typeof path === "number") {
            path = [path];
          }
          if (!path || path.length === 0) {
            return obj;
          }
          if (obj == null) {
            return defaultValue;
          }
          if (typeof path === "string") {
            return objectPath2.get(obj, path.split("."), defaultValue);
          }
          var currentPath = getKey(path[0]);
          var nextObj = getShallowPropertySafely(obj, currentPath);
          if (nextObj === void 0) {
            return defaultValue;
          }
          if (path.length === 1) {
            return nextObj;
          }
          return objectPath2.get(obj[currentPath], path.slice(1), defaultValue);
        };
        objectPath2.del = function del(obj, path) {
          if (typeof path === "number") {
            path = [path];
          }
          if (obj == null) {
            return obj;
          }
          if (isEmpty3(path)) {
            return obj;
          }
          if (typeof path === "string") {
            return objectPath2.del(obj, path.split("."));
          }
          var currentPath = getKey(path[0]);
          getShallowPropertySafely(obj, currentPath);
          if (!hasShallowProperty(obj, currentPath)) {
            return obj;
          }
          if (path.length === 1) {
            if (isArray2(obj)) {
              obj.splice(currentPath, 1);
            } else {
              delete obj[currentPath];
            }
          } else {
            return objectPath2.del(obj[currentPath], path.slice(1));
          }
          return obj;
        };
        return objectPath2;
      }
      var mod = factory();
      mod.create = factory;
      mod.withInheritedProps = factory({ includeInheritedProps: true });
      return mod;
    });
  }
});

// ../../node_modules/.pnpm/slugify@1.6.6/node_modules/slugify/slugify.js
var require_slugify = __commonJS({
  "../../node_modules/.pnpm/slugify@1.6.6/node_modules/slugify/slugify.js"(exports, module) {
    (function(name, root, factory) {
      if (typeof exports === "object") {
        module.exports = factory();
        module.exports["default"] = factory();
      } else if (typeof define === "function" && define.amd) {
        define(factory);
      } else {
        root[name] = factory();
      }
    })("slugify", exports, function() {
      var charMap = JSON.parse(`{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ō":"O","ō":"o","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","Ə":"E","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","ə":"e","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","ѝ":"u","џ":"dz","Ґ":"G","ґ":"g","Ғ":"GH","ғ":"gh","Қ":"KH","қ":"kh","Ң":"NG","ң":"ng","Ү":"UE","ү":"ue","Ұ":"U","ұ":"u","Һ":"H","һ":"h","Ә":"AE","ә":"ae","Ө":"OE","ө":"oe","Ա":"A","Բ":"B","Գ":"G","Դ":"D","Ե":"E","Զ":"Z","Է":"E'","Ը":"Y'","Թ":"T'","Ժ":"JH","Ի":"I","Լ":"L","Խ":"X","Ծ":"C'","Կ":"K","Հ":"H","Ձ":"D'","Ղ":"GH","Ճ":"TW","Մ":"M","Յ":"Y","Ն":"N","Շ":"SH","Չ":"CH","Պ":"P","Ջ":"J","Ռ":"R'","Ս":"S","Վ":"V","Տ":"T","Ր":"R","Ց":"C","Փ":"P'","Ք":"Q'","Օ":"O''","Ֆ":"F","և":"EV","ء":"a","آ":"aa","أ":"a","ؤ":"u","إ":"i","ئ":"e","ا":"a","ب":"b","ة":"h","ت":"t","ث":"th","ج":"j","ح":"h","خ":"kh","د":"d","ذ":"th","ر":"r","ز":"z","س":"s","ش":"sh","ص":"s","ض":"dh","ط":"t","ظ":"z","ع":"a","غ":"gh","ف":"f","ق":"q","ك":"k","ل":"l","م":"m","ن":"n","ه":"h","و":"w","ى":"a","ي":"y","ً":"an","ٌ":"on","ٍ":"en","َ":"a","ُ":"u","ِ":"e","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","پ":"p","چ":"ch","ژ":"zh","ک":"k","گ":"g","ی":"y","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","Ṣ":"S","ṣ":"s","Ẁ":"W","ẁ":"w","Ẃ":"W","ẃ":"w","Ẅ":"W","ẅ":"w","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","–":"-","‘":"'","’":"'","“":"\\"","”":"\\"","„":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₸":"kazakhstani tenge","₹":"indian rupee","₺":"turkish lira","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial","ﻵ":"laa","ﻷ":"laa","ﻹ":"lai","ﻻ":"la"}`);
      var locales = JSON.parse('{"bg":{"Й":"Y","Ц":"Ts","Щ":"Sht","Ъ":"A","Ь":"Y","й":"y","ц":"ts","щ":"sht","ъ":"a","ь":"y"},"de":{"Ä":"AE","ä":"ae","Ö":"OE","ö":"oe","Ü":"UE","ü":"ue","ß":"ss","%":"prozent","&":"und","|":"oder","∑":"summe","∞":"unendlich","♥":"liebe"},"es":{"%":"por ciento","&":"y","<":"menor que",">":"mayor que","|":"o","¢":"centavos","£":"libras","¤":"moneda","₣":"francos","∑":"suma","∞":"infinito","♥":"amor"},"fr":{"%":"pourcent","&":"et","<":"plus petit",">":"plus grand","|":"ou","¢":"centime","£":"livre","¤":"devise","₣":"franc","∑":"somme","∞":"infini","♥":"amour"},"pt":{"%":"porcento","&":"e","<":"menor",">":"maior","|":"ou","¢":"centavo","∑":"soma","£":"libra","∞":"infinito","♥":"amor"},"uk":{"И":"Y","и":"y","Й":"Y","й":"y","Ц":"Ts","ц":"ts","Х":"Kh","х":"kh","Щ":"Shch","щ":"shch","Г":"H","г":"h"},"vi":{"Đ":"D","đ":"d"},"da":{"Ø":"OE","ø":"oe","Å":"AA","å":"aa","%":"procent","&":"og","|":"eller","$":"dollar","<":"mindre end",">":"større end"},"nb":{"&":"og","Å":"AA","Æ":"AE","Ø":"OE","å":"aa","æ":"ae","ø":"oe"},"it":{"&":"e"},"nl":{"&":"en"},"sv":{"&":"och","Å":"AA","Ä":"AE","Ö":"OE","å":"aa","ä":"ae","ö":"oe"}}');
      function replace(string, options) {
        if (typeof string !== "string") {
          throw new Error("slugify: string argument expected");
        }
        options = typeof options === "string" ? { replacement: options } : options || {};
        var locale = locales[options.locale] || {};
        var replacement = options.replacement === void 0 ? "-" : options.replacement;
        var trim = options.trim === void 0 ? true : options.trim;
        var slug2 = string.normalize().split("").reduce(function(result, ch) {
          var appendChar = locale[ch];
          if (appendChar === void 0)
            appendChar = charMap[ch];
          if (appendChar === void 0)
            appendChar = ch;
          if (appendChar === replacement)
            appendChar = " ";
          return result + appendChar.replace(options.remove || /[^\w\s$*_+~.()'"!\-:@]+/g, "");
        }, "");
        if (options.strict) {
          slug2 = slug2.replace(/[^A-Za-z0-9\s]/g, "");
        }
        if (trim) {
          slug2 = slug2.trim();
        }
        slug2 = slug2.replace(/\s+/g, replacement);
        if (options.lower) {
          slug2 = slug2.toLowerCase();
        }
        return slug2;
      }
      replace.extend = function(customMap) {
        Object.assign(charMap, customMap);
      };
      return replace;
    });
  }
});

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/utils.js
var isDate = (d) => d instanceof Date;
var isEmpty = (o) => Object.keys(o).length === 0;
var isObject = (o) => o != null && typeof o === "object";
var hasOwnProperty = (o, ...args) => Object.prototype.hasOwnProperty.call(o, ...args);
var isEmptyObject = (o) => isObject(o) && isEmpty(o);
var makeObjectWithoutPrototype = () => /* @__PURE__ */ Object.create(null);

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/diff.js
var diff = (lhs, rhs) => {
  if (lhs === rhs)
    return {};
  if (!isObject(lhs) || !isObject(rhs))
    return rhs;
  const deletedValues = Object.keys(lhs).reduce((acc, key) => {
    if (!hasOwnProperty(rhs, key)) {
      acc[key] = void 0;
    }
    return acc;
  }, makeObjectWithoutPrototype());
  if (isDate(lhs) || isDate(rhs)) {
    if (lhs.valueOf() == rhs.valueOf())
      return {};
    return rhs;
  }
  return Object.keys(rhs).reduce((acc, key) => {
    if (!hasOwnProperty(lhs, key)) {
      acc[key] = rhs[key];
      return acc;
    }
    const difference = diff(lhs[key], rhs[key]);
    if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(lhs[key]) || !isEmptyObject(rhs[key])))
      return acc;
    acc[key] = difference;
    return acc;
  }, deletedValues);
};
var diff_default = diff;

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/added.js
var addedDiff = (lhs, rhs) => {
  if (lhs === rhs || !isObject(lhs) || !isObject(rhs))
    return {};
  return Object.keys(rhs).reduce((acc, key) => {
    if (hasOwnProperty(lhs, key)) {
      const difference = addedDiff(lhs[key], rhs[key]);
      if (isObject(difference) && isEmpty(difference))
        return acc;
      acc[key] = difference;
      return acc;
    }
    acc[key] = rhs[key];
    return acc;
  }, makeObjectWithoutPrototype());
};
var added_default = addedDiff;

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/deleted.js
var deletedDiff = (lhs, rhs) => {
  if (lhs === rhs || !isObject(lhs) || !isObject(rhs))
    return {};
  return Object.keys(lhs).reduce((acc, key) => {
    if (hasOwnProperty(rhs, key)) {
      const difference = deletedDiff(lhs[key], rhs[key]);
      if (isObject(difference) && isEmpty(difference))
        return acc;
      acc[key] = difference;
      return acc;
    }
    acc[key] = void 0;
    return acc;
  }, makeObjectWithoutPrototype());
};
var deleted_default = deletedDiff;

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/updated.js
var updatedDiff = (lhs, rhs) => {
  if (lhs === rhs)
    return {};
  if (!isObject(lhs) || !isObject(rhs))
    return rhs;
  if (isDate(lhs) || isDate(rhs)) {
    if (lhs.valueOf() == rhs.valueOf())
      return {};
    return rhs;
  }
  return Object.keys(rhs).reduce((acc, key) => {
    if (hasOwnProperty(lhs, key)) {
      const difference = updatedDiff(lhs[key], rhs[key]);
      if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(lhs[key]) || !isEmptyObject(rhs[key])))
        return acc;
      acc[key] = difference;
      return acc;
    }
    return acc;
  }, makeObjectWithoutPrototype());
};
var updated_default = updatedDiff;

// ../../node_modules/.pnpm/deep-object-diff@1.1.9/node_modules/deep-object-diff/mjs/detailed.js
var detailedDiff = (lhs, rhs) => ({
  added: added_default(lhs, rhs),
  deleted: deleted_default(lhs, rhs),
  updated: updated_default(lhs, rhs)
});
var detailed_default = detailedDiff;

// ../../node_modules/.pnpm/@heyform-inc+utils@1.0.3/node_modules/@heyform-inc/utils/dist/index.mjs
var import_isUUID = __toESM(require_isUUID(), 1);
var import_clone = __toESM(require_clone(), 1);
var import_dayjs = __toESM(require_dayjs_min(), 1);
var m = __toESM(require_lib(), 1);

// ../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/index.browser.js
var random = (bytes2) => crypto.getRandomValues(new Uint8Array(bytes2));
var customRandom = (alphabet, defaultSize, getRandom) => {
  let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
  let step = -~(1.6 * mask * defaultSize / alphabet.length);
  return (size = defaultSize) => {
    let id = "";
    while (true) {
      let bytes2 = getRandom(step);
      let j = step;
      while (j--) {
        id += alphabet[bytes2[j] & mask] || "";
        if (id.length === size)
          return id;
      }
    }
  };
};
var customAlphabet = (alphabet, size = 21) => customRandom(alphabet, size, random);

// ../../node_modules/.pnpm/@heyform-inc+utils@1.0.3/node_modules/@heyform-inc/utils/dist/index.mjs
var objectPath = __toESM(require_object_path(), 1);
var import_slugify = __toESM(require_slugify(), 1);

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  if (!getRandomValues) {
    getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== "undefined" && typeof msCrypto.getRandomValues === "function" && msCrypto.getRandomValues.bind(msCrypto);
    if (!getRandomValues) {
      throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
    }
  }
  return getRandomValues(rnds8);
}

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js
var regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js
function validate(uuid) {
  return typeof uuid === "string" && regex_default.test(uuid);
}
var validate_default = validate;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js
var byteToHex = [];
for (i = 0; i < 256; ++i) {
  byteToHex.push((i + 256).toString(16).substr(1));
}
var i;
function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
  if (!validate_default(uuid)) {
    throw TypeError("Stringified UUID is invalid");
  }
  return uuid;
}
var stringify_default = stringify;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/parse.js
function parse(uuid) {
  if (!validate_default(uuid)) {
    throw TypeError("Invalid UUID");
  }
  var v;
  var arr = new Uint8Array(16);
  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 255;
  arr[2] = v >>> 8 & 255;
  arr[3] = v & 255;
  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 255;
  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 255;
  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 255;
  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;
  arr[11] = v / 4294967296 & 255;
  arr[12] = v >>> 24 & 255;
  arr[13] = v >>> 16 & 255;
  arr[14] = v >>> 8 & 255;
  arr[15] = v & 255;
  return arr;
}
var parse_default = parse;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v35.js
function stringToBytes(str) {
  str = unescape(encodeURIComponent(str));
  var bytes2 = [];
  for (var i = 0; i < str.length; ++i) {
    bytes2.push(str.charCodeAt(i));
  }
  return bytes2;
}
var DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
var URL2 = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
function v35_default(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === "string") {
      value = stringToBytes(value);
    }
    if (typeof namespace === "string") {
      namespace = parse_default(namespace);
    }
    if (namespace.length !== 16) {
      throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
    }
    var bytes2 = new Uint8Array(16 + value.length);
    bytes2.set(namespace);
    bytes2.set(value, namespace.length);
    bytes2 = hashfunc(bytes2);
    bytes2[6] = bytes2[6] & 15 | version;
    bytes2[8] = bytes2[8] & 63 | 128;
    if (buf) {
      offset = offset || 0;
      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes2[i];
      }
      return buf;
    }
    return stringify_default(bytes2);
  }
  try {
    generateUUID.name = name;
  } catch (err) {
  }
  generateUUID.DNS = DNS;
  generateUUID.URL = URL2;
  return generateUUID;
}

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/md5.js
function md5(bytes2) {
  if (typeof bytes2 === "string") {
    var msg = unescape(encodeURIComponent(bytes2));
    bytes2 = new Uint8Array(msg.length);
    for (var i = 0; i < msg.length; ++i) {
      bytes2[i] = msg.charCodeAt(i);
    }
  }
  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes2), bytes2.length * 8));
}
function md5ToHexEncodedArray(input) {
  var output = [];
  var length32 = input.length * 32;
  var hexTab = "0123456789abcdef";
  for (var i = 0; i < length32; i += 8) {
    var x = input[i >> 5] >>> i % 32 & 255;
    var hex = parseInt(hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(x & 15), 16);
    output.push(hex);
  }
  return output;
}
function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
function wordsToMd5(x, len) {
  x[len >> 5] |= 128 << len % 32;
  x[getOutputLength(len) - 1] = len;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;
  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }
  return [a, b, c, d];
}
function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }
  var length8 = input.length * 8;
  var output = new Uint32Array(getOutputLength(length8));
  for (var i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 255) << i % 32;
  }
  return output;
}
function safeAdd(x, y) {
  var lsw = (x & 65535) + (y & 65535);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 65535;
}
function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}
function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}
function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}
function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}
var md5_default = md5;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v3.js
var v3 = v35_default("v3", 48, md5_default);

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js
function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || rng)();
  rnds[6] = rnds[6] & 15 | 64;
  rnds[8] = rnds[8] & 63 | 128;
  if (buf) {
    offset = offset || 0;
    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }
    return buf;
  }
  return stringify_default(rnds);
}
var v4_default = v4;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/sha1.js
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;
    case 1:
      return x ^ y ^ z;
    case 2:
      return x & y ^ x & z ^ y & z;
    case 3:
      return x ^ y ^ z;
  }
}
function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}
function sha1(bytes2) {
  var K = [1518500249, 1859775393, 2400959708, 3395469782];
  var H = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
  if (typeof bytes2 === "string") {
    var msg = unescape(encodeURIComponent(bytes2));
    bytes2 = [];
    for (var i = 0; i < msg.length; ++i) {
      bytes2.push(msg.charCodeAt(i));
    }
  } else if (!Array.isArray(bytes2)) {
    bytes2 = Array.prototype.slice.call(bytes2);
  }
  bytes2.push(128);
  var l = bytes2.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);
  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);
    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes2[_i * 64 + j * 4] << 24 | bytes2[_i * 64 + j * 4 + 1] << 16 | bytes2[_i * 64 + j * 4 + 2] << 8 | bytes2[_i * 64 + j * 4 + 3];
    }
    M[_i] = arr;
  }
  M[N - 1][14] = (bytes2.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes2.length - 1) * 8 & 4294967295;
  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);
    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }
    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }
    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];
    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }
    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }
  return [H[0] >> 24 & 255, H[0] >> 16 & 255, H[0] >> 8 & 255, H[0] & 255, H[1] >> 24 & 255, H[1] >> 16 & 255, H[1] >> 8 & 255, H[1] & 255, H[2] >> 24 & 255, H[2] >> 16 & 255, H[2] >> 8 & 255, H[2] & 255, H[3] >> 24 & 255, H[3] >> 16 & 255, H[3] >> 8 & 255, H[3] & 255, H[4] >> 24 & 255, H[4] >> 16 & 255, H[4] >> 8 & 255, H[4] & 255];
}
var sha1_default = sha1;

// ../../node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v5.js
var v5 = v35_default("v5", 80, sha1_default);
var v5_default = v5;

// ../../node_modules/.pnpm/@heyform-inc+utils@1.0.3/node_modules/@heyform-inc/utils/dist/index.mjs
var toString = Object.prototype.toString;
function type(obj) {
  if (obj === null) {
    return "null";
  }
  let type2 = typeof obj;
  if (type2 !== "object") {
    return type2;
  }
  type2 = toString.call(obj).slice(8, -1);
  const typeLower = type2.toLowerCase();
  if (typeLower !== "object") {
    if (typeLower === "number" || typeLower === "boolean" || typeLower === "string") {
      return type2;
    }
    return typeLower;
  }
  return typeLower;
}
var whiteSpaceRegx = /^[\s\f\n\r\t\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u2028\u2029\u202f\u205f\u3000\ufeff\x09\x0a\x0b\x0c\x0d\x20\xa0]+$/;
var numericRegx = /^[+-]?([0-9]*[.])?[0-9]+$/;
var isUUID = import_isUUID.default;
function isBoolean(arg) {
  return type(arg) === "boolean";
}
function isString(arg) {
  return type(arg) === "string";
}
function isNumber(arg) {
  return type(arg) === "number";
}
function isNumeric(arg) {
  return numericRegx.test(String(arg));
}
var isArray = Array.isArray;
function isValidArray(arg) {
  return isArray(arg) && arg.length > 0;
}
function isNan(arg) {
  return isNumber(arg) && Number.isNaN(arg);
}
function isSet(arg) {
  return type(arg) === "set";
}
function isMap(arg) {
  return type(arg) === "map";
}
function isSymbol(arg) {
  return type(arg) === "symbol";
}
function isObject2(arg) {
  return type(arg) === "object";
}
function isDate2(arg) {
  return type(arg) === "date";
}
function isRegExp(arg) {
  return type(arg) === "regexp";
}
function isError(arg) {
  return type(arg) === "error";
}
function isFunction(arg) {
  return type(arg) === "function";
}
function isNull(arg) {
  return type(arg) === "null";
}
function isUndefined(arg) {
  return type(arg) === "undefined";
}
function isNil(arg) {
  return isNull(arg) || isUndefined(arg);
}
function isPlainObject(arg) {
  if (!isObject2(arg))
    return false;
  const ctor = arg.constructor;
  if (typeof ctor !== "function")
    return false;
  const proto = ctor.prototype;
  if (!isObject2(proto))
    return false;
  return proto.hasOwnProperty("isPrototypeOf");
}
function isEmpty2(arg) {
  if (isNil(arg))
    return true;
  if (isBoolean(arg))
    return false;
  if (isNumber(arg))
    return false;
  if (isString(arg)) {
    return arg.length === 0 || whiteSpaceRegx.test(arg);
  }
  if (isFunction(arg) || isArray(arg)) {
    return arg.length === 0;
  }
  switch (type(arg)) {
    case "file":
    case "map":
    case "weakmap":
    case "set":
    case "weakset": {
      return arg.size === 0;
    }
    case "object": {
      for (const key in arg) {
        if (Object.hasOwnProperty.call(arg, key))
          return false;
      }
      return true;
    }
  }
  return false;
}
function isValid(arg) {
  return !isEmpty2(arg);
}
function isEqual(arg1, arg2) {
  return String(arg1) === String(arg2);
}
function isTrue(arg1) {
  return arg1 === true || arg1 === "true" || isEqual(arg1, "1");
}
function isFalse(arg1) {
  return arg1 === false || arg1 === "false" || isEqual(arg1, "0");
}
function isBool(arg) {
  return isTrue(arg) || isFalse(arg);
}
function isFormData(arg) {
  return type(arg) === "formdata";
}
function uniqueArray(arg) {
  if (!isValidArray(arg)) {
    return [];
  }
  return Array.from(new Set(arg));
}
function isURL(arg) {
  if (isEmpty2(arg)) {
    return false;
  }
  try {
    const url = new URL(arg);
    return isValid(url.hostname);
  } catch (err) {
    return false;
  }
}
var helper_default = {
  isUUID,
  isBoolean,
  isString,
  isNumber,
  isNumeric,
  isArray,
  isValidArray,
  isNan,
  isSet,
  isMap,
  isSymbol,
  isObject: isObject2,
  isDate: isDate2,
  isRegExp,
  isError,
  isFunction,
  isNull,
  isUndefined,
  isNil,
  isPlainObject,
  isEmpty: isEmpty2,
  isValid,
  isEqual,
  isTrue,
  isFalse,
  isBool,
  isURL,
  isFormData,
  uniqueArray
};
var BYTE = 1;
var KB = BYTE * 1024;
var MB = KB * 1024;
var GB = MB * 1024;
var TB = GB * 1024;
var PB = TB * 1024;
var regx = /^(-?(?:\d+)?\.?\d+)(b|kb|mb|gb|tb|pb)$/i;
function parseBytes(value) {
  if (isEmpty2(value)) {
    return;
  }
  const str = String(value);
  const matches = str.match(regx);
  if (!matches) {
    return;
  }
  const num = parseFloat(matches[1]);
  const type2 = matches[2].toLowerCase();
  switch (type2) {
    case "pb":
      return num * PB;
    case "tb":
      return num * TB;
    case "gb":
      return num * GB;
    case "mb":
      return num * MB;
    case "kb":
      return num * KB;
    case "b":
      return num * BYTE;
  }
}
function bytes(size) {
  return parseBytes(size);
}
function formatBytes(value) {
  const mag = Math.abs(Number(value));
  let unit;
  let size;
  if (mag >= PB) {
    unit = "PB";
    size = mag / PB;
  } else if (mag >= TB) {
    unit = "TB";
    size = mag / TB;
  } else if (mag >= GB) {
    unit = "GB";
    size = mag / GB;
  } else if (mag >= MB) {
    unit = "MB";
    size = mag / MB;
  } else if (mag >= KB) {
    unit = "KB";
    size = mag / KB;
  } else {
    unit = "B";
    size = mag / BYTE;
  }
  if (String(size).includes(".")) {
    size = size.toFixed(1);
  }
  return size + unit;
}
function clone(obj) {
  return (0, import_clone.default)(obj);
}
var HEX_REGEX = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;
var RGBA_REGEX = /rgba\((\d{1,3}%?),\s*(\d{1,3}%?),\s*(\d{1,3}%?),\s*(\d*(?:\.\d+)?)\)/i;
var RGB_REGEX = /rgb\((\d{1,3}%?),\s*(\d{1,3}%?),\s*(\d{1,3}%?)\)/i;
function isHexColor(color) {
  return HEX_REGEX.test(color);
}
function isRgba(color) {
  return RGBA_REGEX.test(color);
}
function isRgb(color) {
  return RGB_REGEX.test(color);
}
function hexToRgb(hex) {
  if (isEmpty2(hex)) {
    return [];
  }
  if (isRgba(hex)) {
    const [, red2, green2, blue2, alpha3] = RGBA_REGEX.exec(hex);
    return [Number(red2), Number(green2), Number(blue2), Number(alpha3)];
  }
  if (isRgb(hex)) {
    const [, red2, green2, blue2] = RGB_REGEX.exec(hex);
    return [Number(red2), Number(green2), Number(blue2), 1];
  }
  if (!isHexColor(hex)) {
    return [];
  }
  hex = hex.replace(/^#/, "");
  if (hex.length === 3) {
    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
  }
  let alpha2 = 1;
  if (hex.length === 8) {
    alpha2 = hexToFloatAlpha(hex.slice(6, 8));
    hex = hex.slice(0, 6);
  }
  const number = Number.parseInt(hex, 16);
  const red = number >> 16;
  const green = number >> 8 & 255;
  const blue = number & 255;
  return [red, green, blue, alpha2];
}
function isDarkColor(hex) {
  if (!isHexColor(hex)) {
    return true;
  }
  return colorBrightness(hex) < 170;
}
function isLightColor(hex) {
  return !isDarkColor(hex);
}
function colorBrightness(hex) {
  const [red, green, blue, alpha2] = hexToRgb(hex);
  return alpha2 * (red * 299 + green * 587 + blue * 114) / 1e3;
}
function rgbToHex([r, g, b]) {
  return "#" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);
}
function alpha(hex, alpha2) {
  const [red, green, blue] = hexToRgb(hex);
  return `rgba(${red}, ${green}, ${blue}, ${alpha2})`;
}
function lighten(hex, alpha2) {
  return rgbToHex(alphaHexToRgb(hex, 1 - alpha2, "#fff"));
}
function darken(hex, alpha2) {
  return rgbToHex(alphaHexToRgb(hex, 1 - alpha2, "#010101"));
}
function invert(hex) {
  const [red, green, blue] = hexToRgb(hex);
  return rgbToHex([255 - red, 255 - green, 255 - blue]);
}
function alphaHexToRgb(hex, alpha2, backgroundHex) {
  const hexRgb = hexToRgb(hex);
  const backgroundRgb = hexToRgb(backgroundHex);
  return hexRgb.map((color, index) => {
    return colorRange(
      Math.floor(
        colorRange(color) * alpha2 + colorRange(backgroundRgb[index]) * (1 - alpha2)
      )
    );
  });
}
function colorRange(color) {
  return color < 1 ? 1 : color >= 255 ? 255 : color;
}
function hexToFloatAlpha(arg) {
  const num = parseInt(arg, 16);
  const max = parseInt("0xff", 16);
  return Number((num / max).toFixed(2));
}
function toBool(value, defaults) {
  if (isEmpty2(value)) {
    return defaults || false;
  }
  if (isBoolean(value)) {
    return value;
  }
  return isTrue(value);
}
var second = 1;
var minute = second * 60;
var hour = minute * 60;
var day = hour * 24;
var week = day * 7;
var year = day * 365;
var regx2 = /^(-?(?:\d+)?\.?\d+)(s|m|h|d|w|y)$/i;
function parse2(arg) {
  if (isEmpty2(arg)) {
    return;
  }
  const str = String(arg);
  const matches = str.match(regx2);
  if (!matches) {
    return;
  }
  const num = parseFloat(matches[1]);
  const type2 = matches[2].toLowerCase();
  switch (type2) {
    case "y":
      return num * year;
    case "w":
      return num * week;
    case "d":
      return num * day;
    case "h":
      return num * hour;
    case "m":
      return num * minute;
    case "s":
      return num * second;
  }
}
function hs(arg) {
  const value = parse2(arg);
  if (value) {
    return Math.round(value);
  }
}
function ms(arg) {
  const value = hs(arg);
  if (value) {
    return value * 1e3;
  }
}
function timestamp() {
  return Math.floor(Date.now() / 1e3);
}
function date(str, format) {
  return (0, import_dayjs.default)(str, format);
}
function unixDate(t) {
  return import_dayjs.default.unix(t);
}
function isDateExpired(start, end, expire) {
  return end - start > hs(expire);
}
function unixDiff(start, end, unit = "day") {
  if (start > end || start < 0 || end < 0) {
    return 0;
  }
  return unixDate(end).diff(unixDate(start), unit);
}
function datePeriod(start, value = 1, unit = "month") {
  return unixDate(start).add(value, unit).unix();
}
var commonImageMimeTypes = [
  m.lookup(".jpg"),
  m.lookup(".png"),
  m.lookup(".bmp"),
  m.lookup(".webp"),
  m.lookup(".gif")
];
var commonFileMimeTypes = [
  ...commonImageMimeTypes,
  m.lookup(".txt"),
  m.lookup(".md"),
  m.lookup(".doc"),
  m.lookup(".docx"),
  m.lookup(".xls"),
  m.lookup(".xlsx"),
  m.lookup(".csv"),
  m.lookup(".ppt"),
  m.lookup(".pptx"),
  m.lookup(".pdf"),
  m.lookup(".mp4"),
  m.lookup(".wmv"),
  m.lookup(".svg")
];
var mime = m.lookup;
var NANOID_ALPHABET = "ModuleSymbhasOwnPr0123456789ABCDEFGHNRVfgctiUvzKqYTJkLxpZXIjQW";
function nanoid(len = 21) {
  return nanoidCustomAlphabet(NANOID_ALPHABET, len);
}
function nanoidCustomAlphabet(alphabet, len = 21) {
  const generate = customAlphabet(alphabet, len);
  return generate();
}
function pickObject(target, fields, excludes = []) {
  if (!isObject2(target)) {
    return {};
  }
  const copied = clone(target);
  const targetKeys = Object.keys(copied);
  const fieldAlias = {};
  let picked = [];
  if (fields.length > 0) {
    fields.forEach((item) => {
      if (isArray(item)) {
        if (item.length > 0) {
          const filed = item[0];
          picked.push(filed);
          if (item.length > 1) {
            fieldAlias[filed] = item[1];
          }
        }
      } else {
        picked.push(item);
      }
    });
  } else {
    picked = targetKeys;
  }
  const newObj = {};
  targetKeys.filter((key) => !excludes.includes(key) && picked.includes(key)).forEach((key) => {
    const alias = fieldAlias[key];
    if (alias) {
      newObj[alias] = copied[key];
    } else {
      newObj[key] = copied[key];
    }
  });
  return newObj;
}
function pickValidValues(target, fields) {
  const dist = {};
  fields.forEach((field) => {
    let key = String(field);
    let alias;
    if (isArray(field)) {
      key = field[0];
      if (field.length > 1) {
        alias = field[1];
      }
    }
    let value = target[key];
    if (isValid(value)) {
      if (isPlainObject(value) || isArray(value)) {
        value = clone(value);
      }
      dist[alias || key] = value;
    }
  });
  return dist;
}
function removeObjectNil(target) {
  if (!isObject2(target)) {
    return {};
  }
  const copied = clone(target);
  const newObj = {};
  for (const field of Object.keys(copied)) {
    const value = copied[field];
    if (isNil(value) || isNan(value)) {
      continue;
    }
    newObj[field] = value;
  }
  return newObj;
}
function copyObjectValues(target, dist, keyMaps) {
  if (!isObject2(target) || !isObject2(dist)) {
    return;
  }
  for (const keys of keyMaps) {
    let targetKey;
    let distKey;
    if (isArray(keys)) {
      targetKey = keys[0];
      distKey = keys[1];
    } else {
      targetKey = String(keys);
      distKey = targetKey;
    }
    let value = objectPath.get(target, targetKey);
    if (!isNil(value) && !isNan(value)) {
      if (isPlainObject(value) || isArray(value)) {
        value = clone(value);
      }
      objectPath.set(dist, distKey, value);
    }
  }
}
function parseJson(str, defaultValue) {
  let value;
  try {
    value = JSON.parse(str);
  } catch (e) {
  }
  if (defaultValue && !value) {
    value = defaultValue;
  }
  return value;
}
function parseBool(arg, defaultValue) {
  if (isEmpty2(arg)) {
    return defaultValue || false;
  }
  if (isBoolean(arg)) {
    return arg;
  }
  return isTrue(arg);
}
function parseNumber(arg, defaultValue, maxValue) {
  if (isNumber(arg)) {
    if (maxValue && maxValue < Number(arg)) {
      return maxValue;
    }
    return Number(arg);
  }
  const num = parseInt(arg, 10);
  if (isNaN(num)) {
    return defaultValue;
  }
  if (maxValue && maxValue < num) {
    return maxValue;
  }
  return num;
}
function htmlToText(html, limit = 100) {
  let result = html.replace(/<style[^<>]*>((?!<\/).)*<\/style>/gi, "").replace(/<script[^<>]*>((?!<\/).)*<\/script>/gi, "").replace(/<[^>]+>/g, "").replace(/\t|\r|\n|\r\n/g, "").replace(/\s+/g, "").replace(/&nbsp;/g, " ").replace(/&quot;/g, '"').replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
  if (limit > 0) {
    result = result.slice(0, limit);
  }
  return result;
}
function stringify2(arg, options) {
  const arr = [];
  Object.keys(arg).forEach((key) => {
    let val = arg[key];
    if (isEmpty2(val)) {
      val = "";
    } else {
      val = String(val);
    }
    if (options == null ? void 0 : options.encode) {
      val = encodeURIComponent(val);
    }
    arr.push(`${key}=${val}`);
  });
  return arr.join("&");
}
function parse22(str, options) {
  const obj = {};
  if (!isString(str)) {
    return obj;
  }
  const arr = str.replace(/^([^?]+)?\?/, "").split("&");
  arr.forEach((param) => {
    const paramArr = param.split("=");
    const key = paramArr[0];
    if (!isEmpty2(key)) {
      let val = paramArr[1];
      if (options == null ? void 0 : options.decode) {
        val = decodeURIComponent(val);
      }
      val = (options == null ? void 0 : options.separator) && val.includes(options == null ? void 0 : options.separator) ? val.split(options == null ? void 0 : options.separator) : val;
      obj[key] = val;
    }
  });
  return obj;
}
var qs_default = {
  stringify: stringify2,
  parse: parse22
};
var numeric = "0123456789";
var hexic = "0123456789abcdef";
var lower = "abcdefghijklmnopqrstuvwxyz";
var upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var length = 6;
var RandomType = ((RandomType2) => {
  RandomType2[RandomType2["LOWER"] = 0] = "LOWER";
  RandomType2[RandomType2["UPPER"] = 1] = "UPPER";
  RandomType2[RandomType2["NUMERIC"] = 2] = "NUMERIC";
  RandomType2[RandomType2["HEXIC"] = 3] = "HEXIC";
  RandomType2[RandomType2["LOWER_NUMERIC"] = 4] = "LOWER_NUMERIC";
  RandomType2[RandomType2["UPPER_NUMERIC"] = 5] = "UPPER_NUMERIC";
  RandomType2[RandomType2["ALPHANUMERIC"] = 6] = "ALPHANUMERIC";
  return RandomType2;
})(RandomType || {});
function random2(len = length * 2, type2 = 6) {
  let alphabet = numeric + lower + upper;
  switch (type2) {
    case 0:
      alphabet = lower;
      break;
    case 1:
      alphabet = upper;
      break;
    case 3:
      alphabet = hexic;
      break;
    case 2:
      alphabet = numeric;
      break;
    case 4:
      alphabet = lower + numeric;
      break;
    case 5:
      alphabet = upper + numeric;
      break;
    case 6:
      alphabet = lower + upper + numeric;
      break;
  }
  let str = "";
  const alphabetLength = alphabet.length;
  for (let i = 0; i < len; i++) {
    str += alphabet.charAt(Math.floor(Math.random() * alphabetLength));
  }
  return str;
}
function slugify(text, options) {
  return (0, import_slugify.default)(text, {
    replacement: "_",
    lower: true,
    ...options
  });
}

export {
  diff_default,
  added_default,
  deleted_default,
  updated_default,
  detailed_default,
  v4_default,
  v5_default,
  type,
  helper_default,
  parseBytes,
  bytes,
  formatBytes,
  clone,
  isHexColor,
  isRgba,
  isRgb,
  hexToRgb,
  isDarkColor,
  isLightColor,
  colorBrightness,
  rgbToHex,
  alpha,
  lighten,
  darken,
  invert,
  alphaHexToRgb,
  toBool,
  hs,
  ms,
  timestamp,
  date,
  unixDate,
  isDateExpired,
  unixDiff,
  datePeriod,
  commonImageMimeTypes,
  commonFileMimeTypes,
  mime,
  nanoid,
  nanoidCustomAlphabet,
  pickObject,
  pickValidValues,
  removeObjectNil,
  copyObjectValues,
  parseJson,
  parseBool,
  parseNumber,
  htmlToText,
  qs_default,
  RandomType,
  random2 as random,
  slugify
};
//# sourceMappingURL=chunk-6VBUC3NS.js.map
